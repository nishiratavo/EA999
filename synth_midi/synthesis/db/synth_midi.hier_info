|synth_midi
CLOCK_50 => audio_synth:b2v_inst2.CLOCK_50
KEY[0] => audio_synth:b2v_inst2.KEY[0]
KEY[1] => audio_synth:b2v_inst2.KEY[1]
SW[0] => audio_synth:b2v_inst2.SW[0]
SW[1] => audio_synth:b2v_inst2.SW[1]
GPIO_1[0] => uart:uart_receiver.DATA_IN
AUD_XCK <= audio_synth:b2v_inst2.AUD_XCK
I2C_SCLK <= audio_synth:b2v_inst2.I2C_SCLK
I2C_SDAT <> audio_synth:b2v_inst2.I2C_SDAT
AUD_DACDAT <= i2s:b2v_inst1.DACDAT_s_o
AUD_BCLK <= i2s:b2v_inst1.BCLK_o
AUD_DACLRCK <= i2s:b2v_inst1.WS_o
AUD_ADCLRCK <= i2s:b2v_inst1.WS_o


|synth_midi|i2s:b2v_inst1
CLOCK_12M => bclk_gen:b2v_inst1.clk_in
CLOCK_12M => frame_decoder:b2v_inst2.clk_12M
CLOCK_12M => shiftreg_p2s:b2v_inst_Shift_R_o.clk
CLOCK_12M => shiftreg_p2s:b2v_inst_Shift_L_o.clk
CLOCK_12M => shiftreg_s2p:b2v_inst_Shift_R_i.clk
CLOCK_12M => shiftreg_s2p:b2v_inst_Shift_L_i.clk
RST_N_12M => bclk_gen:b2v_inst1.rst_n_12M
RST_N_12M => frame_decoder:b2v_inst2.rst_n_12M
RST_N_12M => shiftreg_p2s:b2v_inst_Shift_R_o.set_n
RST_N_12M => shiftreg_p2s:b2v_inst_Shift_L_o.set_n
RST_N_12M => shiftreg_s2p:b2v_inst_Shift_R_i.set_n
RST_N_12M => shiftreg_s2p:b2v_inst_Shift_L_i.set_n
DACDAT_pl_i[0] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[0]
DACDAT_pl_i[1] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[1]
DACDAT_pl_i[2] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[2]
DACDAT_pl_i[3] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[3]
DACDAT_pl_i[4] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[4]
DACDAT_pl_i[5] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[5]
DACDAT_pl_i[6] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[6]
DACDAT_pl_i[7] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[7]
DACDAT_pl_i[8] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[8]
DACDAT_pl_i[9] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[9]
DACDAT_pl_i[10] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[10]
DACDAT_pl_i[11] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[11]
DACDAT_pl_i[12] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[12]
DACDAT_pl_i[13] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[13]
DACDAT_pl_i[14] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[14]
DACDAT_pl_i[15] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[15]
DACDAT_pr_i[0] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[0]
DACDAT_pr_i[1] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[1]
DACDAT_pr_i[2] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[2]
DACDAT_pr_i[3] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[3]
DACDAT_pr_i[4] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[4]
DACDAT_pr_i[5] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[5]
DACDAT_pr_i[6] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[6]
DACDAT_pr_i[7] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[7]
DACDAT_pr_i[8] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[8]
DACDAT_pr_i[9] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[9]
DACDAT_pr_i[10] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[10]
DACDAT_pr_i[11] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[11]
DACDAT_pr_i[12] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[12]
DACDAT_pr_i[13] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[13]
DACDAT_pr_i[14] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[14]
DACDAT_pr_i[15] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[15]
ADCDAT_s_i => shiftreg_s2p:b2v_inst_Shift_R_i.ser_i
ADCDAT_s_i => shiftreg_s2p:b2v_inst_Shift_L_i.ser_i
ADCDAT_pl_o[0] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[0]
ADCDAT_pl_o[1] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[1]
ADCDAT_pl_o[2] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[2]
ADCDAT_pl_o[3] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[3]
ADCDAT_pl_o[4] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[4]
ADCDAT_pl_o[5] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[5]
ADCDAT_pl_o[6] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[6]
ADCDAT_pl_o[7] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[7]
ADCDAT_pl_o[8] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[8]
ADCDAT_pl_o[9] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[9]
ADCDAT_pl_o[10] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[10]
ADCDAT_pl_o[11] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[11]
ADCDAT_pl_o[12] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[12]
ADCDAT_pl_o[13] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[13]
ADCDAT_pl_o[14] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[14]
ADCDAT_pl_o[15] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[15]
ADCDAT_pr_o[0] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[0]
ADCDAT_pr_o[1] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[1]
ADCDAT_pr_o[2] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[2]
ADCDAT_pr_o[3] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[3]
ADCDAT_pr_o[4] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[4]
ADCDAT_pr_o[5] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[5]
ADCDAT_pr_o[6] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[6]
ADCDAT_pr_o[7] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[7]
ADCDAT_pr_o[8] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[8]
ADCDAT_pr_o[9] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[9]
ADCDAT_pr_o[10] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[10]
ADCDAT_pr_o[11] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[11]
ADCDAT_pr_o[12] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[12]
ADCDAT_pr_o[13] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[13]
ADCDAT_pr_o[14] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[14]
ADCDAT_pr_o[15] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[15]
DACDAT_s_o <= DACDAT_o_MUX:b2v_inst3.DACDAT_s_o
BCLK_o <= bclk_gen:b2v_inst1.clk_out
WS_o <= frame_decoder:b2v_inst2.WS
STROBE <= frame_decoder:b2v_inst2.strobe


|synth_midi|i2s:b2v_inst1|bclk_gen:b2v_inst1
rst_n_12M => count[0].ACLR
rst_n_12M => count[1].ACLR
clk_in => count[0].CLK
clk_in => count[1].CLK
clk_out <= clk_slow.DB_MAX_OUTPUT_PORT_TYPE


|synth_midi|i2s:b2v_inst1|frame_decoder:b2v_inst2
clk_12M => count[0].CLK
clk_12M => count[1].CLK
clk_12M => count[2].CLK
clk_12M => count[3].CLK
clk_12M => count[4].CLK
clk_12M => count[5].CLK
clk_12M => count[6].CLK
rst_n_12M => count[0].PRESET
rst_n_12M => count[1].PRESET
rst_n_12M => count[2].PRESET
rst_n_12M => count[3].PRESET
rst_n_12M => count[4].PRESET
rst_n_12M => count[5].PRESET
rst_n_12M => count[6].PRESET
enable => counter_comb_logic.IN1
enable => counter_comb_logic.IN1
shift_L <= i2s_decoder.DB_MAX_OUTPUT_PORT_TYPE
shift_R <= i2s_decoder.DB_MAX_OUTPUT_PORT_TYPE
strobe <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
WS <= LessThan1.DB_MAX_OUTPUT_PORT_TYPE


|synth_midi|i2s:b2v_inst1|DACDAT_o_MUX:b2v_inst3
SER_OUT_L => DACDAT_s_o.DATAA
SER_OUT_R => DACDAT_s_o.DATAB
WS => DACDAT_s_o.OUTPUTSELECT
DACDAT_s_o <= DACDAT_s_o.DB_MAX_OUTPUT_PORT_TYPE


|synth_midi|i2s:b2v_inst1|shiftreg_p2s:b2v_inst_Shift_R_o
clk => shiftreg[0].CLK
clk => shiftreg[1].CLK
clk => shiftreg[2].CLK
clk => shiftreg[3].CLK
clk => shiftreg[4].CLK
clk => shiftreg[5].CLK
clk => shiftreg[6].CLK
clk => shiftreg[7].CLK
clk => shiftreg[8].CLK
clk => shiftreg[9].CLK
clk => shiftreg[10].CLK
clk => shiftreg[11].CLK
clk => shiftreg[12].CLK
clk => shiftreg[13].CLK
clk => shiftreg[14].CLK
clk => shiftreg[15].CLK
set_n => shiftreg[0].ACLR
set_n => shiftreg[1].ACLR
set_n => shiftreg[2].ACLR
set_n => shiftreg[3].ACLR
set_n => shiftreg[4].ACLR
set_n => shiftreg[5].ACLR
set_n => shiftreg[6].ACLR
set_n => shiftreg[7].ACLR
set_n => shiftreg[8].ACLR
set_n => shiftreg[9].ACLR
set_n => shiftreg[10].ACLR
set_n => shiftreg[11].ACLR
set_n => shiftreg[12].ACLR
set_n => shiftreg[13].ACLR
set_n => shiftreg[14].ACLR
set_n => shiftreg[15].ACLR
load_i => next_shiftreg[15].OUTPUTSELECT
load_i => next_shiftreg[14].OUTPUTSELECT
load_i => next_shiftreg[13].OUTPUTSELECT
load_i => next_shiftreg[12].OUTPUTSELECT
load_i => next_shiftreg[11].OUTPUTSELECT
load_i => next_shiftreg[10].OUTPUTSELECT
load_i => next_shiftreg[9].OUTPUTSELECT
load_i => next_shiftreg[8].OUTPUTSELECT
load_i => next_shiftreg[7].OUTPUTSELECT
load_i => next_shiftreg[6].OUTPUTSELECT
load_i => next_shiftreg[5].OUTPUTSELECT
load_i => next_shiftreg[4].OUTPUTSELECT
load_i => next_shiftreg[3].OUTPUTSELECT
load_i => next_shiftreg[2].OUTPUTSELECT
load_i => next_shiftreg[1].OUTPUTSELECT
load_i => next_shiftreg[0].OUTPUTSELECT
enable => shift_comb.IN0
shift => shift_comb.IN1
par_i[0] => next_shiftreg[0].DATAB
par_i[1] => next_shiftreg[1].DATAB
par_i[2] => next_shiftreg[2].DATAB
par_i[3] => next_shiftreg[3].DATAB
par_i[4] => next_shiftreg[4].DATAB
par_i[5] => next_shiftreg[5].DATAB
par_i[6] => next_shiftreg[6].DATAB
par_i[7] => next_shiftreg[7].DATAB
par_i[8] => next_shiftreg[8].DATAB
par_i[9] => next_shiftreg[9].DATAB
par_i[10] => next_shiftreg[10].DATAB
par_i[11] => next_shiftreg[11].DATAB
par_i[12] => next_shiftreg[12].DATAB
par_i[13] => next_shiftreg[13].DATAB
par_i[14] => next_shiftreg[14].DATAB
par_i[15] => next_shiftreg[15].DATAB
ser_o <= shiftreg[15].DB_MAX_OUTPUT_PORT_TYPE


|synth_midi|i2s:b2v_inst1|shiftreg_p2s:b2v_inst_Shift_L_o
clk => shiftreg[0].CLK
clk => shiftreg[1].CLK
clk => shiftreg[2].CLK
clk => shiftreg[3].CLK
clk => shiftreg[4].CLK
clk => shiftreg[5].CLK
clk => shiftreg[6].CLK
clk => shiftreg[7].CLK
clk => shiftreg[8].CLK
clk => shiftreg[9].CLK
clk => shiftreg[10].CLK
clk => shiftreg[11].CLK
clk => shiftreg[12].CLK
clk => shiftreg[13].CLK
clk => shiftreg[14].CLK
clk => shiftreg[15].CLK
set_n => shiftreg[0].ACLR
set_n => shiftreg[1].ACLR
set_n => shiftreg[2].ACLR
set_n => shiftreg[3].ACLR
set_n => shiftreg[4].ACLR
set_n => shiftreg[5].ACLR
set_n => shiftreg[6].ACLR
set_n => shiftreg[7].ACLR
set_n => shiftreg[8].ACLR
set_n => shiftreg[9].ACLR
set_n => shiftreg[10].ACLR
set_n => shiftreg[11].ACLR
set_n => shiftreg[12].ACLR
set_n => shiftreg[13].ACLR
set_n => shiftreg[14].ACLR
set_n => shiftreg[15].ACLR
load_i => next_shiftreg[15].OUTPUTSELECT
load_i => next_shiftreg[14].OUTPUTSELECT
load_i => next_shiftreg[13].OUTPUTSELECT
load_i => next_shiftreg[12].OUTPUTSELECT
load_i => next_shiftreg[11].OUTPUTSELECT
load_i => next_shiftreg[10].OUTPUTSELECT
load_i => next_shiftreg[9].OUTPUTSELECT
load_i => next_shiftreg[8].OUTPUTSELECT
load_i => next_shiftreg[7].OUTPUTSELECT
load_i => next_shiftreg[6].OUTPUTSELECT
load_i => next_shiftreg[5].OUTPUTSELECT
load_i => next_shiftreg[4].OUTPUTSELECT
load_i => next_shiftreg[3].OUTPUTSELECT
load_i => next_shiftreg[2].OUTPUTSELECT
load_i => next_shiftreg[1].OUTPUTSELECT
load_i => next_shiftreg[0].OUTPUTSELECT
enable => shift_comb.IN0
shift => shift_comb.IN1
par_i[0] => next_shiftreg[0].DATAB
par_i[1] => next_shiftreg[1].DATAB
par_i[2] => next_shiftreg[2].DATAB
par_i[3] => next_shiftreg[3].DATAB
par_i[4] => next_shiftreg[4].DATAB
par_i[5] => next_shiftreg[5].DATAB
par_i[6] => next_shiftreg[6].DATAB
par_i[7] => next_shiftreg[7].DATAB
par_i[8] => next_shiftreg[8].DATAB
par_i[9] => next_shiftreg[9].DATAB
par_i[10] => next_shiftreg[10].DATAB
par_i[11] => next_shiftreg[11].DATAB
par_i[12] => next_shiftreg[12].DATAB
par_i[13] => next_shiftreg[13].DATAB
par_i[14] => next_shiftreg[14].DATAB
par_i[15] => next_shiftreg[15].DATAB
ser_o <= shiftreg[15].DB_MAX_OUTPUT_PORT_TYPE


|synth_midi|i2s:b2v_inst1|shiftreg_s2p:b2v_inst_Shift_R_i
clk => shiftreg[0].CLK
clk => shiftreg[1].CLK
clk => shiftreg[2].CLK
clk => shiftreg[3].CLK
clk => shiftreg[4].CLK
clk => shiftreg[5].CLK
clk => shiftreg[6].CLK
clk => shiftreg[7].CLK
clk => shiftreg[8].CLK
clk => shiftreg[9].CLK
clk => shiftreg[10].CLK
clk => shiftreg[11].CLK
clk => shiftreg[12].CLK
clk => shiftreg[13].CLK
clk => shiftreg[14].CLK
clk => shiftreg[15].CLK
set_n => shiftreg[0].ACLR
set_n => shiftreg[1].ACLR
set_n => shiftreg[2].ACLR
set_n => shiftreg[3].ACLR
set_n => shiftreg[4].ACLR
set_n => shiftreg[5].ACLR
set_n => shiftreg[6].ACLR
set_n => shiftreg[7].ACLR
set_n => shiftreg[8].ACLR
set_n => shiftreg[9].ACLR
set_n => shiftreg[10].ACLR
set_n => shiftreg[11].ACLR
set_n => shiftreg[12].ACLR
set_n => shiftreg[13].ACLR
set_n => shiftreg[14].ACLR
set_n => shiftreg[15].ACLR
shift => shift_comb.IN0
enable => shift_comb.IN1
ser_i => shiftreg[0].DATAIN
par_o[0] <= shiftreg[0].DB_MAX_OUTPUT_PORT_TYPE
par_o[1] <= shiftreg[1].DB_MAX_OUTPUT_PORT_TYPE
par_o[2] <= shiftreg[2].DB_MAX_OUTPUT_PORT_TYPE
par_o[3] <= shiftreg[3].DB_MAX_OUTPUT_PORT_TYPE
par_o[4] <= shiftreg[4].DB_MAX_OUTPUT_PORT_TYPE
par_o[5] <= shiftreg[5].DB_MAX_OUTPUT_PORT_TYPE
par_o[6] <= shiftreg[6].DB_MAX_OUTPUT_PORT_TYPE
par_o[7] <= shiftreg[7].DB_MAX_OUTPUT_PORT_TYPE
par_o[8] <= shiftreg[8].DB_MAX_OUTPUT_PORT_TYPE
par_o[9] <= shiftreg[9].DB_MAX_OUTPUT_PORT_TYPE
par_o[10] <= shiftreg[10].DB_MAX_OUTPUT_PORT_TYPE
par_o[11] <= shiftreg[11].DB_MAX_OUTPUT_PORT_TYPE
par_o[12] <= shiftreg[12].DB_MAX_OUTPUT_PORT_TYPE
par_o[13] <= shiftreg[13].DB_MAX_OUTPUT_PORT_TYPE
par_o[14] <= shiftreg[14].DB_MAX_OUTPUT_PORT_TYPE
par_o[15] <= shiftreg[15].DB_MAX_OUTPUT_PORT_TYPE


|synth_midi|i2s:b2v_inst1|shiftreg_s2p:b2v_inst_Shift_L_i
clk => shiftreg[0].CLK
clk => shiftreg[1].CLK
clk => shiftreg[2].CLK
clk => shiftreg[3].CLK
clk => shiftreg[4].CLK
clk => shiftreg[5].CLK
clk => shiftreg[6].CLK
clk => shiftreg[7].CLK
clk => shiftreg[8].CLK
clk => shiftreg[9].CLK
clk => shiftreg[10].CLK
clk => shiftreg[11].CLK
clk => shiftreg[12].CLK
clk => shiftreg[13].CLK
clk => shiftreg[14].CLK
clk => shiftreg[15].CLK
set_n => shiftreg[0].ACLR
set_n => shiftreg[1].ACLR
set_n => shiftreg[2].ACLR
set_n => shiftreg[3].ACLR
set_n => shiftreg[4].ACLR
set_n => shiftreg[5].ACLR
set_n => shiftreg[6].ACLR
set_n => shiftreg[7].ACLR
set_n => shiftreg[8].ACLR
set_n => shiftreg[9].ACLR
set_n => shiftreg[10].ACLR
set_n => shiftreg[11].ACLR
set_n => shiftreg[12].ACLR
set_n => shiftreg[13].ACLR
set_n => shiftreg[14].ACLR
set_n => shiftreg[15].ACLR
shift => shift_comb.IN0
enable => shift_comb.IN1
ser_i => shiftreg[0].DATAIN
par_o[0] <= shiftreg[0].DB_MAX_OUTPUT_PORT_TYPE
par_o[1] <= shiftreg[1].DB_MAX_OUTPUT_PORT_TYPE
par_o[2] <= shiftreg[2].DB_MAX_OUTPUT_PORT_TYPE
par_o[3] <= shiftreg[3].DB_MAX_OUTPUT_PORT_TYPE
par_o[4] <= shiftreg[4].DB_MAX_OUTPUT_PORT_TYPE
par_o[5] <= shiftreg[5].DB_MAX_OUTPUT_PORT_TYPE
par_o[6] <= shiftreg[6].DB_MAX_OUTPUT_PORT_TYPE
par_o[7] <= shiftreg[7].DB_MAX_OUTPUT_PORT_TYPE
par_o[8] <= shiftreg[8].DB_MAX_OUTPUT_PORT_TYPE
par_o[9] <= shiftreg[9].DB_MAX_OUTPUT_PORT_TYPE
par_o[10] <= shiftreg[10].DB_MAX_OUTPUT_PORT_TYPE
par_o[11] <= shiftreg[11].DB_MAX_OUTPUT_PORT_TYPE
par_o[12] <= shiftreg[12].DB_MAX_OUTPUT_PORT_TYPE
par_o[13] <= shiftreg[13].DB_MAX_OUTPUT_PORT_TYPE
par_o[14] <= shiftreg[14].DB_MAX_OUTPUT_PORT_TYPE
par_o[15] <= shiftreg[15].DB_MAX_OUTPUT_PORT_TYPE


|synth_midi|audio_synth:b2v_inst2
CLOCK_50 => clk_div:b2v_inst1.clk_in
AUD_XCK <= clk_div:b2v_inst1.clk_out
KEY[0] => sync_n_edgeDetector:b2v_inst4.data_in
KEY[1] => sync_n_edgeDetector:b2v_inst5.data_in
SW[0] => sync_n_edgeDetector:b2v_inst6.data_in
SW[1] => sync_n_edgeDetector:b2v_inst7.data_in
RESET <= sync_n_edgeDetector:b2v_inst4.data_sync
I2C_SCLK <= i2c_master:b2v_inst3.scl_o
I2C_SDAT <> i2c_master:b2v_inst3.sda_io


|synth_midi|audio_synth:b2v_inst2|clk_div:b2v_inst1
clk_in => count[0].CLK
clk_in => count[1].CLK
clk_in => count[2].CLK
clk_in => count[3].CLK
clk_in => count[4].CLK
clk_in => count[5].CLK
clk_in => count[6].CLK
clk_in => count[7].CLK
clk_in => count[8].CLK
clk_in => count[9].CLK
clk_in => count[10].CLK
clk_in => count[11].CLK
clk_out <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


|synth_midi|audio_synth:b2v_inst2|i2c_ctrl:b2v_inst2
clk => send_data.CLK
clk => reg_count[0].CLK
clk => reg_count[1].CLK
clk => reg_count[2].CLK
clk => reg_count[3].CLK
clk => s_state~1.DATAIN
reset => send_data.ACLR
reset => reg_count[0].ACLR
reset => reg_count[1].ACLR
reset => reg_count[2].ACLR
reset => reg_count[3].ACLR
reset => s_state~3.DATAIN
ctrl_init => Selector12.IN2
ctrl_init => Selector11.IN1
select_mode[0] => Equal0.IN1
select_mode[0] => Equal1.IN0
select_mode[0] => Equal2.IN1
select_mode[0] => Equal3.IN1
select_mode[1] => Equal0.IN0
select_mode[1] => Equal1.IN1
select_mode[1] => Equal2.IN0
select_mode[1] => Equal3.IN0
write_o <= send_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[0] <= write_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[1] <= write_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[2] <= write_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[3] <= write_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[4] <= write_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[5] <= write_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[6] <= write_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[7] <= <GND>
write_data_o[8] <= <GND>
write_data_o[9] <= write_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[10] <= write_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[11] <= write_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[12] <= write_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[13] <= <GND>
write_data_o[14] <= <GND>
write_data_o[15] <= <GND>
write_done_i => fsm_drive.IN1
write_done_i => fsm_drive.IN1
ack_error_i => fsm_drive.IN1


|synth_midi|audio_synth:b2v_inst2|i2c_master:b2v_inst3
clk => write_done.CLK
clk => ack_error.CLK
clk => byte_count[0].CLK
clk => byte_count[1].CLK
clk => ack.CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => data[0].CLK
clk => data[1].CLK
clk => data[2].CLK
clk => data[3].CLK
clk => data[4].CLK
clk => data[5].CLK
clk => data[6].CLK
clk => data[7].CLK
clk => data[8].CLK
clk => data[9].CLK
clk => data[10].CLK
clk => data[11].CLK
clk => data[12].CLK
clk => data[13].CLK
clk => data[14].CLK
clk => data[15].CLK
clk => data[16].CLK
clk => data[17].CLK
clk => data[18].CLK
clk => data[19].CLK
clk => data[20].CLK
clk => data[21].CLK
clk => data[22].CLK
clk => data[23].CLK
clk => sda.CLK
clk => scl.CLK
clk => clk_edge_mask[0].CLK
clk => clk_edge_mask[1].CLK
clk => clk_edge_mask[2].CLK
clk => clk_mask[0].CLK
clk => clk_mask[1].CLK
clk => clk_divider[0].CLK
clk => clk_divider[1].CLK
clk => clk_divider[2].CLK
clk => clk_divider[3].CLK
clk => clk_divider[4].CLK
clk => fsm_state~1.DATAIN
reset_n => write_done.ACLR
reset_n => ack_error.ACLR
reset_n => byte_count[0].ACLR
reset_n => byte_count[1].ACLR
reset_n => ack.ACLR
reset_n => bit_count[0].ACLR
reset_n => bit_count[1].ACLR
reset_n => bit_count[2].ACLR
reset_n => data[0].ACLR
reset_n => data[1].ACLR
reset_n => data[2].ACLR
reset_n => data[3].ACLR
reset_n => data[4].ACLR
reset_n => data[5].ACLR
reset_n => data[6].ACLR
reset_n => data[7].ACLR
reset_n => data[8].ACLR
reset_n => data[9].ACLR
reset_n => data[10].ACLR
reset_n => data[11].ACLR
reset_n => data[12].ACLR
reset_n => data[13].ACLR
reset_n => data[14].ACLR
reset_n => data[15].ACLR
reset_n => data[16].ACLR
reset_n => data[17].ACLR
reset_n => data[18].ACLR
reset_n => data[19].ACLR
reset_n => data[20].ACLR
reset_n => data[21].ACLR
reset_n => data[22].ACLR
reset_n => data[23].ACLR
reset_n => sda.PRESET
reset_n => scl.PRESET
reset_n => clk_edge_mask[0].ACLR
reset_n => clk_edge_mask[1].ACLR
reset_n => clk_edge_mask[2].ACLR
reset_n => clk_mask[0].ACLR
reset_n => clk_mask[1].ACLR
reset_n => clk_divider[0].ACLR
reset_n => clk_divider[1].ACLR
reset_n => clk_divider[2].ACLR
reset_n => clk_divider[3].ACLR
reset_n => clk_divider[4].ACLR
reset_n => fsm_state~3.DATAIN
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_data_i[0] => next_data.DATAB
write_data_i[1] => next_data.DATAB
write_data_i[2] => next_data.DATAB
write_data_i[3] => next_data.DATAB
write_data_i[4] => next_data.DATAB
write_data_i[5] => next_data.DATAB
write_data_i[6] => next_data.DATAB
write_data_i[7] => next_data.DATAB
write_data_i[8] => next_data.DATAB
write_data_i[9] => next_data.DATAB
write_data_i[10] => next_data.DATAB
write_data_i[11] => next_data.DATAB
write_data_i[12] => next_data.DATAB
write_data_i[13] => next_data.DATAB
write_data_i[14] => next_data.DATAB
write_data_i[15] => next_data.DATAB
sda_io <> sda_io
scl_o <= scl.DB_MAX_OUTPUT_PORT_TYPE
write_done_o <= write_done.DB_MAX_OUTPUT_PORT_TYPE
ack_error_o <= ack_error.DB_MAX_OUTPUT_PORT_TYPE


|synth_midi|audio_synth:b2v_inst2|sync_n_edgeDetector:b2v_inst4
data_in => shiftreg[2].DATAIN
clock => shiftreg[0].CLK
clock => shiftreg[1].CLK
clock => shiftreg[2].CLK
reset_n => shiftreg[0].PRESET
reset_n => shiftreg[1].PRESET
reset_n => shiftreg[2].PRESET
data_sync <= shiftreg[1].DB_MAX_OUTPUT_PORT_TYPE
rise <= rise.DB_MAX_OUTPUT_PORT_TYPE
fall <= fall.DB_MAX_OUTPUT_PORT_TYPE


|synth_midi|audio_synth:b2v_inst2|sync_n_edgeDetector:b2v_inst5
data_in => shiftreg[2].DATAIN
clock => shiftreg[0].CLK
clock => shiftreg[1].CLK
clock => shiftreg[2].CLK
reset_n => shiftreg[0].PRESET
reset_n => shiftreg[1].PRESET
reset_n => shiftreg[2].PRESET
data_sync <= shiftreg[1].DB_MAX_OUTPUT_PORT_TYPE
rise <= rise.DB_MAX_OUTPUT_PORT_TYPE
fall <= fall.DB_MAX_OUTPUT_PORT_TYPE


|synth_midi|audio_synth:b2v_inst2|sync_n_edgeDetector:b2v_inst6
data_in => shiftreg[2].DATAIN
clock => shiftreg[0].CLK
clock => shiftreg[1].CLK
clock => shiftreg[2].CLK
reset_n => shiftreg[0].PRESET
reset_n => shiftreg[1].PRESET
reset_n => shiftreg[2].PRESET
data_sync <= shiftreg[1].DB_MAX_OUTPUT_PORT_TYPE
rise <= rise.DB_MAX_OUTPUT_PORT_TYPE
fall <= fall.DB_MAX_OUTPUT_PORT_TYPE


|synth_midi|audio_synth:b2v_inst2|sync_n_edgeDetector:b2v_inst7
data_in => shiftreg[2].DATAIN
clock => shiftreg[0].CLK
clock => shiftreg[1].CLK
clock => shiftreg[2].CLK
reset_n => shiftreg[0].PRESET
reset_n => shiftreg[1].PRESET
reset_n => shiftreg[2].PRESET
data_sync <= shiftreg[1].DB_MAX_OUTPUT_PORT_TYPE
rise <= rise.DB_MAX_OUTPUT_PORT_TYPE
fall <= fall.DB_MAX_OUTPUT_PORT_TYPE


|synth_midi|midi_fm:synth
clk => midi_controller:midi.clk
clk => FM:fm_synth.clk
reset => midi_controller:midi.reset
reset => FM:fm_synth.reset_n
data[0] => midi_controller:midi.data[0]
data[1] => midi_controller:midi.data[1]
data[2] => midi_controller:midi.data[2]
data[3] => midi_controller:midi.data[3]
data[4] => midi_controller:midi.data[4]
data[5] => midi_controller:midi.data[5]
data[6] => midi_controller:midi.data[6]
data[7] => midi_controller:midi.data[7]
new_data => midi_controller:midi.new_data
strobe => FM:fm_synth.strobe
audio[0] <= FM:fm_synth.data_g[0]
audio[1] <= FM:fm_synth.data_g[1]
audio[2] <= FM:fm_synth.data_g[2]
audio[3] <= FM:fm_synth.data_g[3]
audio[4] <= FM:fm_synth.data_g[4]
audio[5] <= FM:fm_synth.data_g[5]
audio[6] <= FM:fm_synth.data_g[6]
audio[7] <= FM:fm_synth.data_g[7]
audio[8] <= FM:fm_synth.data_g[8]
audio[9] <= FM:fm_synth.data_g[9]
audio[10] <= FM:fm_synth.data_g[10]
audio[11] <= FM:fm_synth.data_g[11]
audio[12] <= FM:fm_synth.data_g[12]
audio[13] <= FM:fm_synth.data_g[13]
audio[14] <= FM:fm_synth.data_g[14]
audio[15] <= FM:fm_synth.data_g[15]


|synth_midi|midi_fm:synth|midi_controller:midi
clk => midi_receiver:receiver.clk
clk => midi_decoder:decoder.clk
reset => midi_receiver:receiver.reset
reset => midi_decoder:decoder.reset
data[0] => midi_receiver:receiver.data[0]
data[1] => midi_receiver:receiver.data[1]
data[2] => midi_receiver:receiver.data[2]
data[3] => midi_receiver:receiver.data[3]
data[4] => midi_receiver:receiver.data[4]
data[5] => midi_receiver:receiver.data[5]
data[6] => midi_receiver:receiver.data[6]
data[7] => midi_receiver:receiver.data[7]
new_data => midi_receiver:receiver.new_data
fm_depth[0] <= midi_decoder:decoder.fm_depth[0]
fm_depth[1] <= midi_decoder:decoder.fm_depth[1]
fm_depth[2] <= midi_decoder:decoder.fm_depth[2]
fm_depth[3] <= midi_decoder:decoder.fm_depth[3]
fm_depth[4] <= midi_decoder:decoder.fm_depth[4]
fm_depth[5] <= midi_decoder:decoder.fm_depth[5]
fm_depth[6] <= midi_decoder:decoder.fm_depth[6]
fm_ratio[0] <= midi_decoder:decoder.fm_ratio[0]
fm_ratio[1] <= midi_decoder:decoder.fm_ratio[1]
fm_ratio[2] <= midi_decoder:decoder.fm_ratio[2]
fm_ratio[3] <= midi_decoder:decoder.fm_ratio[3]
fm_ratio[4] <= midi_decoder:decoder.fm_ratio[4]
fm_ratio[5] <= midi_decoder:decoder.fm_ratio[5]
fm_ratio[6] <= midi_decoder:decoder.fm_ratio[6]
note_out[0] <= midi_decoder:decoder.note_out[0]
note_out[1] <= midi_decoder:decoder.note_out[1]
note_out[2] <= midi_decoder:decoder.note_out[2]
note_out[3] <= midi_decoder:decoder.note_out[3]
note_out[4] <= midi_decoder:decoder.note_out[4]
note_out[5] <= midi_decoder:decoder.note_out[5]
note_out[6] <= midi_decoder:decoder.note_out[6]
note_on <= midi_decoder:decoder.note_on


|synth_midi|midi_fm:synth|midi_controller:midi|midi_receiver:receiver
clk => process_data.CLK
clk => controller_num_intern[0].CLK
clk => controller_num_intern[1].CLK
clk => controller_num_intern[2].CLK
clk => controller_num_intern[3].CLK
clk => controller_num_intern[4].CLK
clk => controller_num_intern[5].CLK
clk => controller_num_intern[6].CLK
clk => controller_data_intern[0].CLK
clk => controller_data_intern[1].CLK
clk => controller_data_intern[2].CLK
clk => controller_data_intern[3].CLK
clk => controller_data_intern[4].CLK
clk => controller_data_intern[5].CLK
clk => controller_data_intern[6].CLK
clk => note_out_intern[0].CLK
clk => note_out_intern[1].CLK
clk => note_out_intern[2].CLK
clk => note_out_intern[3].CLK
clk => note_out_intern[4].CLK
clk => note_out_intern[5].CLK
clk => note_out_intern[6].CLK
clk => note_on_intern.CLK
clk => data2[0].CLK
clk => data2[1].CLK
clk => data2[2].CLK
clk => data2[3].CLK
clk => data2[4].CLK
clk => data2[5].CLK
clk => data2[6].CLK
clk => data1[0].CLK
clk => data1[1].CLK
clk => data1[2].CLK
clk => data1[3].CLK
clk => data1[4].CLK
clk => data1[5].CLK
clk => data1[6].CLK
clk => status[0].CLK
clk => status[1].CLK
clk => status[2].CLK
clk => status[3].CLK
clk => s_state~1.DATAIN
reset => process_data.ACLR
reset => controller_num_intern[0].ACLR
reset => controller_num_intern[1].ACLR
reset => controller_num_intern[2].ACLR
reset => controller_num_intern[3].ACLR
reset => controller_num_intern[4].ACLR
reset => controller_num_intern[5].ACLR
reset => controller_num_intern[6].ACLR
reset => controller_data_intern[0].ACLR
reset => controller_data_intern[1].ACLR
reset => controller_data_intern[2].ACLR
reset => controller_data_intern[3].ACLR
reset => controller_data_intern[4].ACLR
reset => controller_data_intern[5].ACLR
reset => controller_data_intern[6].ACLR
reset => note_out_intern[0].ACLR
reset => note_out_intern[1].ACLR
reset => note_out_intern[2].ACLR
reset => note_out_intern[3].ACLR
reset => note_out_intern[4].ACLR
reset => note_out_intern[5].ACLR
reset => note_out_intern[6].ACLR
reset => note_on_intern.ACLR
reset => data2[0].ACLR
reset => data2[1].ACLR
reset => data2[2].ACLR
reset => data2[3].ACLR
reset => data2[4].ACLR
reset => data2[5].ACLR
reset => data2[6].ACLR
reset => data1[0].ACLR
reset => data1[1].ACLR
reset => data1[2].ACLR
reset => data1[3].ACLR
reset => data1[4].ACLR
reset => data1[5].ACLR
reset => data1[6].ACLR
reset => status[0].ACLR
reset => status[1].ACLR
reset => status[2].ACLR
reset => status[3].ACLR
reset => s_state~3.DATAIN
data[0] => next_data1.DATAB
data[0] => next_data2.DATAB
data[1] => next_data1.DATAB
data[1] => next_data2.DATAB
data[2] => next_data1.DATAB
data[2] => next_data2.DATAB
data[3] => next_data1.DATAB
data[3] => next_data2.DATAB
data[4] => next_status.DATAB
data[4] => next_data1.DATAB
data[4] => next_data2.DATAB
data[5] => next_status.DATAB
data[5] => next_data1.DATAB
data[5] => next_data2.DATAB
data[6] => next_status.DATAB
data[6] => next_data1.DATAB
data[6] => next_data2.DATAB
data[7] => next_status.OUTPUTSELECT
data[7] => next_status.OUTPUTSELECT
data[7] => next_status.OUTPUTSELECT
data[7] => next_status.OUTPUTSELECT
data[7] => Selector1.IN2
data[7] => Selector0.IN1
new_data => next_data1.OUTPUTSELECT
new_data => next_data1.OUTPUTSELECT
new_data => next_data1.OUTPUTSELECT
new_data => next_data1.OUTPUTSELECT
new_data => next_data1.OUTPUTSELECT
new_data => next_data1.OUTPUTSELECT
new_data => next_data1.OUTPUTSELECT
new_data => next_data2.OUTPUTSELECT
new_data => next_data2.OUTPUTSELECT
new_data => next_data2.OUTPUTSELECT
new_data => next_data2.OUTPUTSELECT
new_data => next_data2.OUTPUTSELECT
new_data => next_data2.OUTPUTSELECT
new_data => next_data2.OUTPUTSELECT
new_data => next_process_data.DATAB
new_data => Selector0.IN2
new_data => Selector2.IN2
new_data => Selector1.IN1
new_data => Selector2.IN1
controller_num[0] <= controller_num_intern[0].DB_MAX_OUTPUT_PORT_TYPE
controller_num[1] <= controller_num_intern[1].DB_MAX_OUTPUT_PORT_TYPE
controller_num[2] <= controller_num_intern[2].DB_MAX_OUTPUT_PORT_TYPE
controller_num[3] <= controller_num_intern[3].DB_MAX_OUTPUT_PORT_TYPE
controller_num[4] <= controller_num_intern[4].DB_MAX_OUTPUT_PORT_TYPE
controller_num[5] <= controller_num_intern[5].DB_MAX_OUTPUT_PORT_TYPE
controller_num[6] <= controller_num_intern[6].DB_MAX_OUTPUT_PORT_TYPE
controller_data[0] <= controller_data_intern[0].DB_MAX_OUTPUT_PORT_TYPE
controller_data[1] <= controller_data_intern[1].DB_MAX_OUTPUT_PORT_TYPE
controller_data[2] <= controller_data_intern[2].DB_MAX_OUTPUT_PORT_TYPE
controller_data[3] <= controller_data_intern[3].DB_MAX_OUTPUT_PORT_TYPE
controller_data[4] <= controller_data_intern[4].DB_MAX_OUTPUT_PORT_TYPE
controller_data[5] <= controller_data_intern[5].DB_MAX_OUTPUT_PORT_TYPE
controller_data[6] <= controller_data_intern[6].DB_MAX_OUTPUT_PORT_TYPE
note_out[0] <= note_out_intern[0].DB_MAX_OUTPUT_PORT_TYPE
note_out[1] <= note_out_intern[1].DB_MAX_OUTPUT_PORT_TYPE
note_out[2] <= note_out_intern[2].DB_MAX_OUTPUT_PORT_TYPE
note_out[3] <= note_out_intern[3].DB_MAX_OUTPUT_PORT_TYPE
note_out[4] <= note_out_intern[4].DB_MAX_OUTPUT_PORT_TYPE
note_out[5] <= note_out_intern[5].DB_MAX_OUTPUT_PORT_TYPE
note_out[6] <= note_out_intern[6].DB_MAX_OUTPUT_PORT_TYPE
note_on <= note_on_intern.DB_MAX_OUTPUT_PORT_TYPE
velocity[0] <= Mux13.DB_MAX_OUTPUT_PORT_TYPE
velocity[1] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
velocity[2] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
velocity[3] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
velocity[4] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
velocity[5] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
velocity[6] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE


|synth_midi|midi_fm:synth|midi_controller:midi|midi_decoder:decoder
clk => ratio[0].CLK
clk => ratio[1].CLK
clk => ratio[2].CLK
clk => ratio[3].CLK
clk => ratio[4].CLK
clk => ratio[5].CLK
clk => ratio[6].CLK
clk => depth[0].CLK
clk => depth[1].CLK
clk => depth[2].CLK
clk => depth[3].CLK
clk => depth[4].CLK
clk => depth[5].CLK
clk => depth[6].CLK
reset => ratio[0].ACLR
reset => ratio[1].ACLR
reset => ratio[2].ACLR
reset => ratio[3].ACLR
reset => ratio[4].ACLR
reset => ratio[5].ACLR
reset => ratio[6].ACLR
reset => depth[0].ACLR
reset => depth[1].ACLR
reset => depth[2].ACLR
reset => depth[3].ACLR
reset => depth[4].ACLR
reset => depth[5].ACLR
reset => depth[6].ACLR
controller_num[0] => Mux0.IN6
controller_num[0] => Mux1.IN6
controller_num[0] => Mux2.IN6
controller_num[0] => Mux3.IN6
controller_num[0] => Mux4.IN6
controller_num[0] => Mux5.IN6
controller_num[0] => Mux6.IN6
controller_num[0] => Mux7.IN6
controller_num[0] => Mux8.IN6
controller_num[0] => Mux9.IN6
controller_num[0] => Mux10.IN6
controller_num[0] => Mux11.IN6
controller_num[0] => Mux12.IN6
controller_num[0] => Mux13.IN6
controller_num[1] => Mux0.IN5
controller_num[1] => Mux1.IN5
controller_num[1] => Mux2.IN5
controller_num[1] => Mux3.IN5
controller_num[1] => Mux4.IN5
controller_num[1] => Mux5.IN5
controller_num[1] => Mux6.IN5
controller_num[1] => Mux7.IN5
controller_num[1] => Mux8.IN5
controller_num[1] => Mux9.IN5
controller_num[1] => Mux10.IN5
controller_num[1] => Mux11.IN5
controller_num[1] => Mux12.IN5
controller_num[1] => Mux13.IN5
controller_num[2] => Mux0.IN4
controller_num[2] => Mux1.IN4
controller_num[2] => Mux2.IN4
controller_num[2] => Mux3.IN4
controller_num[2] => Mux4.IN4
controller_num[2] => Mux5.IN4
controller_num[2] => Mux6.IN4
controller_num[2] => Mux7.IN4
controller_num[2] => Mux8.IN4
controller_num[2] => Mux9.IN4
controller_num[2] => Mux10.IN4
controller_num[2] => Mux11.IN4
controller_num[2] => Mux12.IN4
controller_num[2] => Mux13.IN4
controller_num[3] => Mux0.IN3
controller_num[3] => Mux1.IN3
controller_num[3] => Mux2.IN3
controller_num[3] => Mux3.IN3
controller_num[3] => Mux4.IN3
controller_num[3] => Mux5.IN3
controller_num[3] => Mux6.IN3
controller_num[3] => Mux7.IN3
controller_num[3] => Mux8.IN3
controller_num[3] => Mux9.IN3
controller_num[3] => Mux10.IN3
controller_num[3] => Mux11.IN3
controller_num[3] => Mux12.IN3
controller_num[3] => Mux13.IN3
controller_num[4] => Mux0.IN2
controller_num[4] => Mux1.IN2
controller_num[4] => Mux2.IN2
controller_num[4] => Mux3.IN2
controller_num[4] => Mux4.IN2
controller_num[4] => Mux5.IN2
controller_num[4] => Mux6.IN2
controller_num[4] => Mux7.IN2
controller_num[4] => Mux8.IN2
controller_num[4] => Mux9.IN2
controller_num[4] => Mux10.IN2
controller_num[4] => Mux11.IN2
controller_num[4] => Mux12.IN2
controller_num[4] => Mux13.IN2
controller_num[5] => Mux0.IN1
controller_num[5] => Mux1.IN1
controller_num[5] => Mux2.IN1
controller_num[5] => Mux3.IN1
controller_num[5] => Mux4.IN1
controller_num[5] => Mux5.IN1
controller_num[5] => Mux6.IN1
controller_num[5] => Mux7.IN1
controller_num[5] => Mux8.IN1
controller_num[5] => Mux9.IN1
controller_num[5] => Mux10.IN1
controller_num[5] => Mux11.IN1
controller_num[5] => Mux12.IN1
controller_num[5] => Mux13.IN1
controller_num[6] => Mux0.IN0
controller_num[6] => Mux1.IN0
controller_num[6] => Mux2.IN0
controller_num[6] => Mux3.IN0
controller_num[6] => Mux4.IN0
controller_num[6] => Mux5.IN0
controller_num[6] => Mux6.IN0
controller_num[6] => Mux7.IN0
controller_num[6] => Mux8.IN0
controller_num[6] => Mux9.IN0
controller_num[6] => Mux10.IN0
controller_num[6] => Mux11.IN0
controller_num[6] => Mux12.IN0
controller_num[6] => Mux13.IN0
controller_data[0] => Mux6.IN7
controller_data[0] => Mux13.IN7
controller_data[1] => Mux5.IN7
controller_data[1] => Mux12.IN7
controller_data[2] => Mux4.IN7
controller_data[2] => Mux11.IN7
controller_data[3] => Mux3.IN7
controller_data[3] => Mux10.IN7
controller_data[4] => Mux2.IN7
controller_data[4] => Mux9.IN7
controller_data[5] => Mux1.IN7
controller_data[5] => Mux8.IN7
controller_data[6] => Mux0.IN7
controller_data[6] => Mux7.IN7
note_out_in[0] => note_out[0].DATAIN
note_out_in[1] => note_out[1].DATAIN
note_out_in[2] => note_out[2].DATAIN
note_out_in[3] => note_out[3].DATAIN
note_out_in[4] => note_out[4].DATAIN
note_out_in[5] => note_out[5].DATAIN
note_out_in[6] => note_out[6].DATAIN
note_on_in => note_on.DATAIN
velocity[0] => ~NO_FANOUT~
velocity[1] => ~NO_FANOUT~
velocity[2] => ~NO_FANOUT~
velocity[3] => ~NO_FANOUT~
velocity[4] => ~NO_FANOUT~
velocity[5] => ~NO_FANOUT~
velocity[6] => ~NO_FANOUT~
fm_depth[0] <= depth[0].DB_MAX_OUTPUT_PORT_TYPE
fm_depth[1] <= depth[1].DB_MAX_OUTPUT_PORT_TYPE
fm_depth[2] <= depth[2].DB_MAX_OUTPUT_PORT_TYPE
fm_depth[3] <= depth[3].DB_MAX_OUTPUT_PORT_TYPE
fm_depth[4] <= depth[4].DB_MAX_OUTPUT_PORT_TYPE
fm_depth[5] <= depth[5].DB_MAX_OUTPUT_PORT_TYPE
fm_depth[6] <= depth[6].DB_MAX_OUTPUT_PORT_TYPE
fm_ratio[0] <= ratio[0].DB_MAX_OUTPUT_PORT_TYPE
fm_ratio[1] <= ratio[1].DB_MAX_OUTPUT_PORT_TYPE
fm_ratio[2] <= ratio[2].DB_MAX_OUTPUT_PORT_TYPE
fm_ratio[3] <= ratio[3].DB_MAX_OUTPUT_PORT_TYPE
fm_ratio[4] <= ratio[4].DB_MAX_OUTPUT_PORT_TYPE
fm_ratio[5] <= ratio[5].DB_MAX_OUTPUT_PORT_TYPE
fm_ratio[6] <= ratio[6].DB_MAX_OUTPUT_PORT_TYPE
note_out[0] <= note_out_in[0].DB_MAX_OUTPUT_PORT_TYPE
note_out[1] <= note_out_in[1].DB_MAX_OUTPUT_PORT_TYPE
note_out[2] <= note_out_in[2].DB_MAX_OUTPUT_PORT_TYPE
note_out[3] <= note_out_in[3].DB_MAX_OUTPUT_PORT_TYPE
note_out[4] <= note_out_in[4].DB_MAX_OUTPUT_PORT_TYPE
note_out[5] <= note_out_in[5].DB_MAX_OUTPUT_PORT_TYPE
note_out[6] <= note_out_in[6].DB_MAX_OUTPUT_PORT_TYPE
note_on <= note_on_in.DB_MAX_OUTPUT_PORT_TYPE


|synth_midi|midi_fm:synth|FM:fm_synth
clk => fm_sel:b2v_inst3.clk
clk => DDS:mod_dds.clk
clk => DDS:car_dds.clk
reset_n => fm_sel:b2v_inst3.reset_n
reset_n => DDS:mod_dds.reset_n
reset_n => DDS:car_dds.reset_n
tone_cmd[0] => tone_decoder:midi.midi_note_in[0]
tone_cmd[1] => tone_decoder:midi.midi_note_in[1]
tone_cmd[2] => tone_decoder:midi.midi_note_in[2]
tone_cmd[3] => tone_decoder:midi.midi_note_in[3]
tone_cmd[4] => tone_decoder:midi.midi_note_in[4]
tone_cmd[5] => tone_decoder:midi.midi_note_in[5]
tone_cmd[6] => tone_decoder:midi.midi_note_in[6]
tone_on => fm_sel:b2v_inst3.tone_on
strobe => DDS:mod_dds.strobe
strobe => DDS:car_dds.strobe
fm_ratio[0] => fm_sel:b2v_inst3.fm_ratio[0]
fm_ratio[1] => fm_sel:b2v_inst3.fm_ratio[1]
fm_ratio[2] => fm_sel:b2v_inst3.fm_ratio[2]
fm_ratio[3] => fm_sel:b2v_inst3.fm_ratio[3]
fm_ratio[4] => fm_sel:b2v_inst3.fm_ratio[4]
fm_ratio[5] => fm_sel:b2v_inst3.fm_ratio[5]
fm_ratio[6] => fm_sel:b2v_inst3.fm_ratio[6]
fm_depth[0] => fm_sel:b2v_inst3.fm_depth[0]
fm_depth[1] => fm_sel:b2v_inst3.fm_depth[1]
fm_depth[2] => fm_sel:b2v_inst3.fm_depth[2]
fm_depth[3] => fm_sel:b2v_inst3.fm_depth[3]
fm_depth[4] => fm_sel:b2v_inst3.fm_depth[4]
fm_depth[5] => fm_sel:b2v_inst3.fm_depth[5]
fm_depth[6] => fm_sel:b2v_inst3.fm_depth[6]
data_g[0] <= DDS:car_dds.data_g[0]
data_g[1] <= DDS:car_dds.data_g[1]
data_g[2] <= DDS:car_dds.data_g[2]
data_g[3] <= DDS:car_dds.data_g[3]
data_g[4] <= DDS:car_dds.data_g[4]
data_g[5] <= DDS:car_dds.data_g[5]
data_g[6] <= DDS:car_dds.data_g[6]
data_g[7] <= DDS:car_dds.data_g[7]
data_g[8] <= DDS:car_dds.data_g[8]
data_g[9] <= DDS:car_dds.data_g[9]
data_g[10] <= DDS:car_dds.data_g[10]
data_g[11] <= DDS:car_dds.data_g[11]
data_g[12] <= DDS:car_dds.data_g[12]
data_g[13] <= DDS:car_dds.data_g[13]
data_g[14] <= DDS:car_dds.data_g[14]
data_g[15] <= DDS:car_dds.data_g[15]


|synth_midi|midi_fm:synth|FM:fm_synth|tone_decoder:midi
midi_note_in[0] => Ram0.RADDR
midi_note_in[1] => Ram0.RADDR1
midi_note_in[2] => Ram0.RADDR2
midi_note_in[3] => Ram0.RADDR3
midi_note_in[4] => Ram0.RADDR4
midi_note_in[5] => Ram0.RADDR5
midi_note_in[6] => Ram0.RADDR6
phi_incr_out[0] <= Ram0.DATAOUT
phi_incr_out[1] <= Ram0.DATAOUT1
phi_incr_out[2] <= Ram0.DATAOUT2
phi_incr_out[3] <= Ram0.DATAOUT3
phi_incr_out[4] <= Ram0.DATAOUT4
phi_incr_out[5] <= Ram0.DATAOUT5
phi_incr_out[6] <= Ram0.DATAOUT6
phi_incr_out[7] <= Ram0.DATAOUT7
phi_incr_out[8] <= Ram0.DATAOUT8
phi_incr_out[9] <= Ram0.DATAOUT9
phi_incr_out[10] <= Ram0.DATAOUT10
phi_incr_out[11] <= Ram0.DATAOUT11
phi_incr_out[12] <= Ram0.DATAOUT12
phi_incr_out[13] <= Ram0.DATAOUT13
phi_incr_out[14] <= Ram0.DATAOUT14
phi_incr_out[15] <= Ram0.DATAOUT15
phi_incr_out[16] <= Ram0.DATAOUT16
phi_incr_out[17] <= Ram0.DATAOUT17
phi_incr_out[18] <= Ram0.DATAOUT18


|synth_midi|midi_fm:synth|FM:fm_synth|fm_sel:b2v_inst3
clk => ~NO_FANOUT~
reset_n => ~NO_FANOUT~
mod_data[0] => Mult1.IN16
mod_data[1] => Mult1.IN15
mod_data[2] => Mult1.IN14
mod_data[3] => Mult1.IN13
mod_data[4] => Mult1.IN12
mod_data[5] => Mult1.IN11
mod_data[6] => Mult1.IN10
mod_data[7] => Mult1.IN9
mod_data[8] => Mult1.IN8
mod_data[9] => Mult1.IN7
mod_data[10] => Mult1.IN6
mod_data[11] => Mult1.IN5
mod_data[12] => Mult1.IN4
mod_data[13] => Mult1.IN3
mod_data[14] => Mult1.IN2
mod_data[15] => Mult1.IN1
tone_on => car_on.DATAIN
tone_on => mod_on.DATAIN
M_fsig[0] => Add0.IN40
M_fsig[0] => Mult0.IN25
M_fsig[1] => Add0.IN39
M_fsig[1] => Mult0.IN24
M_fsig[2] => Add0.IN38
M_fsig[2] => Mult0.IN23
M_fsig[3] => Add0.IN37
M_fsig[3] => Mult0.IN22
M_fsig[4] => Add0.IN36
M_fsig[4] => Mult0.IN21
M_fsig[5] => Add0.IN35
M_fsig[5] => Mult0.IN20
M_fsig[6] => Add0.IN34
M_fsig[6] => Mult0.IN19
M_fsig[7] => Add0.IN33
M_fsig[7] => Mult0.IN18
M_fsig[8] => Add0.IN32
M_fsig[8] => Mult0.IN17
M_fsig[9] => Add0.IN31
M_fsig[9] => Mult0.IN16
M_fsig[10] => Add0.IN30
M_fsig[10] => Mult0.IN15
M_fsig[11] => Add0.IN29
M_fsig[11] => Mult0.IN14
M_fsig[12] => Add0.IN28
M_fsig[12] => Mult0.IN13
M_fsig[13] => Add0.IN27
M_fsig[13] => Mult0.IN12
M_fsig[14] => Add0.IN26
M_fsig[14] => Mult0.IN11
M_fsig[15] => Add0.IN25
M_fsig[15] => Mult0.IN10
M_fsig[16] => Add0.IN24
M_fsig[16] => Mult0.IN9
M_fsig[17] => Add0.IN23
M_fsig[17] => Mult0.IN8
M_fsig[18] => Add0.IN22
M_fsig[18] => Mult0.IN7
fm_ratio[0] => Mult0.IN6
fm_ratio[1] => Mult0.IN5
fm_ratio[2] => Mult0.IN4
fm_ratio[3] => Mult0.IN3
fm_ratio[4] => Mult0.IN2
fm_ratio[5] => Mult0.IN1
fm_ratio[6] => Mult0.IN0
fm_depth[0] => Mult1.IN23
fm_depth[1] => Mult1.IN22
fm_depth[2] => Mult1.IN21
fm_depth[3] => Mult1.IN20
fm_depth[4] => Mult1.IN19
fm_depth[5] => Mult1.IN18
fm_depth[6] => Mult1.IN17
mod_on <= tone_on.DB_MAX_OUTPUT_PORT_TYPE
mod_M[0] <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
mod_M[1] <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
mod_M[2] <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
mod_M[3] <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
mod_M[4] <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
mod_M[5] <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
mod_M[6] <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
mod_M[7] <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
mod_M[8] <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
mod_M[9] <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
mod_M[10] <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
mod_M[11] <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
mod_M[12] <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
mod_M[13] <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
mod_M[14] <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
mod_M[15] <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
mod_M[16] <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
mod_M[17] <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
mod_M[18] <= Mult0.DB_MAX_OUTPUT_PORT_TYPE
car_on <= tone_on.DB_MAX_OUTPUT_PORT_TYPE
car_M[0] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
car_M[1] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
car_M[2] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
car_M[3] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
car_M[4] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
car_M[5] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
car_M[6] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
car_M[7] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
car_M[8] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
car_M[9] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
car_M[10] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
car_M[11] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
car_M[12] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
car_M[13] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
car_M[14] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
car_M[15] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
car_M[16] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
car_M[17] <= Add0.DB_MAX_OUTPUT_PORT_TYPE
car_M[18] <= Add0.DB_MAX_OUTPUT_PORT_TYPE


|synth_midi|midi_fm:synth|FM:fm_synth|DDS:mod_dds
clk => phase_cumulator:b2v_inst1.clk
clk => DDS_LUT:b2v_inst3.clk
reset_n => phase_cumulator:b2v_inst1.reset_n
reset_n => DDS_LUT:b2v_inst3.reset_n
phi_incr[0] => phase_cumulator:b2v_inst1.phi_incr_i[0]
phi_incr[1] => phase_cumulator:b2v_inst1.phi_incr_i[1]
phi_incr[2] => phase_cumulator:b2v_inst1.phi_incr_i[2]
phi_incr[3] => phase_cumulator:b2v_inst1.phi_incr_i[3]
phi_incr[4] => phase_cumulator:b2v_inst1.phi_incr_i[4]
phi_incr[5] => phase_cumulator:b2v_inst1.phi_incr_i[5]
phi_incr[6] => phase_cumulator:b2v_inst1.phi_incr_i[6]
phi_incr[7] => phase_cumulator:b2v_inst1.phi_incr_i[7]
phi_incr[8] => phase_cumulator:b2v_inst1.phi_incr_i[8]
phi_incr[9] => phase_cumulator:b2v_inst1.phi_incr_i[9]
phi_incr[10] => phase_cumulator:b2v_inst1.phi_incr_i[10]
phi_incr[11] => phase_cumulator:b2v_inst1.phi_incr_i[11]
phi_incr[12] => phase_cumulator:b2v_inst1.phi_incr_i[12]
phi_incr[13] => phase_cumulator:b2v_inst1.phi_incr_i[13]
phi_incr[14] => phase_cumulator:b2v_inst1.phi_incr_i[14]
phi_incr[15] => phase_cumulator:b2v_inst1.phi_incr_i[15]
phi_incr[16] => phase_cumulator:b2v_inst1.phi_incr_i[16]
phi_incr[17] => phase_cumulator:b2v_inst1.phi_incr_i[17]
phi_incr[18] => phase_cumulator:b2v_inst1.phi_incr_i[18]
tone_on => phase_cumulator:b2v_inst1.tone_on_i
data_g[0] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[0]
data_g[1] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[1]
data_g[2] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[2]
data_g[3] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[3]
data_g[4] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[4]
data_g[5] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[5]
data_g[6] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[6]
data_g[7] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[7]
data_g[8] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[8]
data_g[9] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[9]
data_g[10] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[10]
data_g[11] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[11]
data_g[12] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[12]
data_g[13] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[13]
data_g[14] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[14]
data_g[15] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[15]
strobe => phase_cumulator:b2v_inst1.strobe_i


|synth_midi|midi_fm:synth|FM:fm_synth|DDS:mod_dds|phase_cumulator:b2v_inst1
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
reset_n => count[0].ACLR
reset_n => count[1].ACLR
reset_n => count[2].ACLR
reset_n => count[3].ACLR
reset_n => count[4].ACLR
reset_n => count[5].ACLR
reset_n => count[6].ACLR
reset_n => count[7].ACLR
reset_n => count[8].ACLR
reset_n => count[9].ACLR
reset_n => count[10].ACLR
reset_n => count[11].ACLR
reset_n => count[12].ACLR
reset_n => count[13].ACLR
reset_n => count[14].ACLR
reset_n => count[15].ACLR
reset_n => count[16].ACLR
reset_n => count[17].ACLR
reset_n => count[18].ACLR
tone_on_i => comb_logic.IN0
tone_on_i => next_count[18].OUTPUTSELECT
tone_on_i => next_count[17].OUTPUTSELECT
tone_on_i => next_count[16].OUTPUTSELECT
tone_on_i => next_count[15].OUTPUTSELECT
tone_on_i => next_count[14].OUTPUTSELECT
tone_on_i => next_count[13].OUTPUTSELECT
tone_on_i => next_count[12].OUTPUTSELECT
tone_on_i => next_count[11].OUTPUTSELECT
tone_on_i => next_count[10].OUTPUTSELECT
tone_on_i => next_count[9].OUTPUTSELECT
tone_on_i => next_count[8].OUTPUTSELECT
tone_on_i => next_count[7].OUTPUTSELECT
tone_on_i => next_count[6].OUTPUTSELECT
tone_on_i => next_count[5].OUTPUTSELECT
tone_on_i => next_count[4].OUTPUTSELECT
tone_on_i => next_count[3].OUTPUTSELECT
tone_on_i => next_count[2].OUTPUTSELECT
tone_on_i => next_count[1].OUTPUTSELECT
tone_on_i => next_count[0].OUTPUTSELECT
strobe_i => comb_logic.IN1
phi_incr_i[0] => Add0.IN19
phi_incr_i[1] => Add0.IN18
phi_incr_i[2] => Add0.IN17
phi_incr_i[3] => Add0.IN16
phi_incr_i[4] => Add0.IN15
phi_incr_i[5] => Add0.IN14
phi_incr_i[6] => Add0.IN13
phi_incr_i[7] => Add0.IN12
phi_incr_i[8] => Add0.IN11
phi_incr_i[9] => Add0.IN10
phi_incr_i[10] => Add0.IN9
phi_incr_i[11] => Add0.IN8
phi_incr_i[12] => Add0.IN7
phi_incr_i[13] => Add0.IN6
phi_incr_i[14] => Add0.IN5
phi_incr_i[15] => Add0.IN4
phi_incr_i[16] => Add0.IN3
phi_incr_i[17] => Add0.IN2
phi_incr_i[18] => Add0.IN1
count_o[0] <= count[0].DB_MAX_OUTPUT_PORT_TYPE
count_o[1] <= count[1].DB_MAX_OUTPUT_PORT_TYPE
count_o[2] <= count[2].DB_MAX_OUTPUT_PORT_TYPE
count_o[3] <= count[3].DB_MAX_OUTPUT_PORT_TYPE
count_o[4] <= count[4].DB_MAX_OUTPUT_PORT_TYPE
count_o[5] <= count[5].DB_MAX_OUTPUT_PORT_TYPE
count_o[6] <= count[6].DB_MAX_OUTPUT_PORT_TYPE
count_o[7] <= count[7].DB_MAX_OUTPUT_PORT_TYPE
count_o[8] <= count[8].DB_MAX_OUTPUT_PORT_TYPE
count_o[9] <= count[9].DB_MAX_OUTPUT_PORT_TYPE
count_o[10] <= count[10].DB_MAX_OUTPUT_PORT_TYPE
count_o[11] <= count[11].DB_MAX_OUTPUT_PORT_TYPE
count_o[12] <= count[12].DB_MAX_OUTPUT_PORT_TYPE
count_o[13] <= count[13].DB_MAX_OUTPUT_PORT_TYPE
count_o[14] <= count[14].DB_MAX_OUTPUT_PORT_TYPE
count_o[15] <= count[15].DB_MAX_OUTPUT_PORT_TYPE
count_o[16] <= count[16].DB_MAX_OUTPUT_PORT_TYPE
count_o[17] <= count[17].DB_MAX_OUTPUT_PORT_TYPE
count_o[18] <= count[18].DB_MAX_OUTPUT_PORT_TYPE


|synth_midi|midi_fm:synth|FM:fm_synth|DDS:mod_dds|DDS_LUT:b2v_inst3
clk => addr[0].CLK
clk => addr[1].CLK
clk => addr[2].CLK
clk => addr[3].CLK
clk => addr[4].CLK
clk => addr[5].CLK
clk => addr[6].CLK
clk => addr[7].CLK
reset_n => addr[0].ACLR
reset_n => addr[1].ACLR
reset_n => addr[2].ACLR
reset_n => addr[3].ACLR
reset_n => addr[4].ACLR
reset_n => addr[5].ACLR
reset_n => addr[6].ACLR
reset_n => addr[7].ACLR
lut_index[0] => ~NO_FANOUT~
lut_index[1] => ~NO_FANOUT~
lut_index[2] => ~NO_FANOUT~
lut_index[3] => ~NO_FANOUT~
lut_index[4] => ~NO_FANOUT~
lut_index[5] => ~NO_FANOUT~
lut_index[6] => ~NO_FANOUT~
lut_index[7] => ~NO_FANOUT~
lut_index[8] => ~NO_FANOUT~
lut_index[9] => ~NO_FANOUT~
lut_index[10] => ~NO_FANOUT~
lut_index[11] => addr[0].DATAIN
lut_index[12] => addr[1].DATAIN
lut_index[13] => addr[2].DATAIN
lut_index[14] => addr[3].DATAIN
lut_index[15] => addr[4].DATAIN
lut_index[16] => addr[5].DATAIN
lut_index[17] => addr[6].DATAIN
lut_index[18] => addr[7].DATAIN
DACDAT_dds_o[0] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[1] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[2] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[3] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[4] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[5] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[6] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[7] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[8] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[9] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[10] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[11] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[12] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[13] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[14] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[15] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|synth_midi|midi_fm:synth|FM:fm_synth|DDS:car_dds
clk => phase_cumulator:b2v_inst1.clk
clk => DDS_LUT:b2v_inst3.clk
reset_n => phase_cumulator:b2v_inst1.reset_n
reset_n => DDS_LUT:b2v_inst3.reset_n
phi_incr[0] => phase_cumulator:b2v_inst1.phi_incr_i[0]
phi_incr[1] => phase_cumulator:b2v_inst1.phi_incr_i[1]
phi_incr[2] => phase_cumulator:b2v_inst1.phi_incr_i[2]
phi_incr[3] => phase_cumulator:b2v_inst1.phi_incr_i[3]
phi_incr[4] => phase_cumulator:b2v_inst1.phi_incr_i[4]
phi_incr[5] => phase_cumulator:b2v_inst1.phi_incr_i[5]
phi_incr[6] => phase_cumulator:b2v_inst1.phi_incr_i[6]
phi_incr[7] => phase_cumulator:b2v_inst1.phi_incr_i[7]
phi_incr[8] => phase_cumulator:b2v_inst1.phi_incr_i[8]
phi_incr[9] => phase_cumulator:b2v_inst1.phi_incr_i[9]
phi_incr[10] => phase_cumulator:b2v_inst1.phi_incr_i[10]
phi_incr[11] => phase_cumulator:b2v_inst1.phi_incr_i[11]
phi_incr[12] => phase_cumulator:b2v_inst1.phi_incr_i[12]
phi_incr[13] => phase_cumulator:b2v_inst1.phi_incr_i[13]
phi_incr[14] => phase_cumulator:b2v_inst1.phi_incr_i[14]
phi_incr[15] => phase_cumulator:b2v_inst1.phi_incr_i[15]
phi_incr[16] => phase_cumulator:b2v_inst1.phi_incr_i[16]
phi_incr[17] => phase_cumulator:b2v_inst1.phi_incr_i[17]
phi_incr[18] => phase_cumulator:b2v_inst1.phi_incr_i[18]
tone_on => phase_cumulator:b2v_inst1.tone_on_i
data_g[0] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[0]
data_g[1] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[1]
data_g[2] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[2]
data_g[3] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[3]
data_g[4] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[4]
data_g[5] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[5]
data_g[6] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[6]
data_g[7] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[7]
data_g[8] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[8]
data_g[9] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[9]
data_g[10] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[10]
data_g[11] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[11]
data_g[12] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[12]
data_g[13] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[13]
data_g[14] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[14]
data_g[15] <= DDS_LUT:b2v_inst3.DACDAT_dds_o[15]
strobe => phase_cumulator:b2v_inst1.strobe_i


|synth_midi|midi_fm:synth|FM:fm_synth|DDS:car_dds|phase_cumulator:b2v_inst1
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
clk => count[12].CLK
clk => count[13].CLK
clk => count[14].CLK
clk => count[15].CLK
clk => count[16].CLK
clk => count[17].CLK
clk => count[18].CLK
reset_n => count[0].ACLR
reset_n => count[1].ACLR
reset_n => count[2].ACLR
reset_n => count[3].ACLR
reset_n => count[4].ACLR
reset_n => count[5].ACLR
reset_n => count[6].ACLR
reset_n => count[7].ACLR
reset_n => count[8].ACLR
reset_n => count[9].ACLR
reset_n => count[10].ACLR
reset_n => count[11].ACLR
reset_n => count[12].ACLR
reset_n => count[13].ACLR
reset_n => count[14].ACLR
reset_n => count[15].ACLR
reset_n => count[16].ACLR
reset_n => count[17].ACLR
reset_n => count[18].ACLR
tone_on_i => comb_logic.IN0
tone_on_i => next_count[18].OUTPUTSELECT
tone_on_i => next_count[17].OUTPUTSELECT
tone_on_i => next_count[16].OUTPUTSELECT
tone_on_i => next_count[15].OUTPUTSELECT
tone_on_i => next_count[14].OUTPUTSELECT
tone_on_i => next_count[13].OUTPUTSELECT
tone_on_i => next_count[12].OUTPUTSELECT
tone_on_i => next_count[11].OUTPUTSELECT
tone_on_i => next_count[10].OUTPUTSELECT
tone_on_i => next_count[9].OUTPUTSELECT
tone_on_i => next_count[8].OUTPUTSELECT
tone_on_i => next_count[7].OUTPUTSELECT
tone_on_i => next_count[6].OUTPUTSELECT
tone_on_i => next_count[5].OUTPUTSELECT
tone_on_i => next_count[4].OUTPUTSELECT
tone_on_i => next_count[3].OUTPUTSELECT
tone_on_i => next_count[2].OUTPUTSELECT
tone_on_i => next_count[1].OUTPUTSELECT
tone_on_i => next_count[0].OUTPUTSELECT
strobe_i => comb_logic.IN1
phi_incr_i[0] => Add0.IN19
phi_incr_i[1] => Add0.IN18
phi_incr_i[2] => Add0.IN17
phi_incr_i[3] => Add0.IN16
phi_incr_i[4] => Add0.IN15
phi_incr_i[5] => Add0.IN14
phi_incr_i[6] => Add0.IN13
phi_incr_i[7] => Add0.IN12
phi_incr_i[8] => Add0.IN11
phi_incr_i[9] => Add0.IN10
phi_incr_i[10] => Add0.IN9
phi_incr_i[11] => Add0.IN8
phi_incr_i[12] => Add0.IN7
phi_incr_i[13] => Add0.IN6
phi_incr_i[14] => Add0.IN5
phi_incr_i[15] => Add0.IN4
phi_incr_i[16] => Add0.IN3
phi_incr_i[17] => Add0.IN2
phi_incr_i[18] => Add0.IN1
count_o[0] <= count[0].DB_MAX_OUTPUT_PORT_TYPE
count_o[1] <= count[1].DB_MAX_OUTPUT_PORT_TYPE
count_o[2] <= count[2].DB_MAX_OUTPUT_PORT_TYPE
count_o[3] <= count[3].DB_MAX_OUTPUT_PORT_TYPE
count_o[4] <= count[4].DB_MAX_OUTPUT_PORT_TYPE
count_o[5] <= count[5].DB_MAX_OUTPUT_PORT_TYPE
count_o[6] <= count[6].DB_MAX_OUTPUT_PORT_TYPE
count_o[7] <= count[7].DB_MAX_OUTPUT_PORT_TYPE
count_o[8] <= count[8].DB_MAX_OUTPUT_PORT_TYPE
count_o[9] <= count[9].DB_MAX_OUTPUT_PORT_TYPE
count_o[10] <= count[10].DB_MAX_OUTPUT_PORT_TYPE
count_o[11] <= count[11].DB_MAX_OUTPUT_PORT_TYPE
count_o[12] <= count[12].DB_MAX_OUTPUT_PORT_TYPE
count_o[13] <= count[13].DB_MAX_OUTPUT_PORT_TYPE
count_o[14] <= count[14].DB_MAX_OUTPUT_PORT_TYPE
count_o[15] <= count[15].DB_MAX_OUTPUT_PORT_TYPE
count_o[16] <= count[16].DB_MAX_OUTPUT_PORT_TYPE
count_o[17] <= count[17].DB_MAX_OUTPUT_PORT_TYPE
count_o[18] <= count[18].DB_MAX_OUTPUT_PORT_TYPE


|synth_midi|midi_fm:synth|FM:fm_synth|DDS:car_dds|DDS_LUT:b2v_inst3
clk => addr[0].CLK
clk => addr[1].CLK
clk => addr[2].CLK
clk => addr[3].CLK
clk => addr[4].CLK
clk => addr[5].CLK
clk => addr[6].CLK
clk => addr[7].CLK
reset_n => addr[0].ACLR
reset_n => addr[1].ACLR
reset_n => addr[2].ACLR
reset_n => addr[3].ACLR
reset_n => addr[4].ACLR
reset_n => addr[5].ACLR
reset_n => addr[6].ACLR
reset_n => addr[7].ACLR
lut_index[0] => ~NO_FANOUT~
lut_index[1] => ~NO_FANOUT~
lut_index[2] => ~NO_FANOUT~
lut_index[3] => ~NO_FANOUT~
lut_index[4] => ~NO_FANOUT~
lut_index[5] => ~NO_FANOUT~
lut_index[6] => ~NO_FANOUT~
lut_index[7] => ~NO_FANOUT~
lut_index[8] => ~NO_FANOUT~
lut_index[9] => ~NO_FANOUT~
lut_index[10] => ~NO_FANOUT~
lut_index[11] => addr[0].DATAIN
lut_index[12] => addr[1].DATAIN
lut_index[13] => addr[2].DATAIN
lut_index[14] => addr[3].DATAIN
lut_index[15] => addr[4].DATAIN
lut_index[16] => addr[5].DATAIN
lut_index[17] => addr[6].DATAIN
lut_index[18] => addr[7].DATAIN
DACDAT_dds_o[0] <= Mux12.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[1] <= Mux11.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[2] <= Mux10.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[3] <= Mux9.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[4] <= Mux8.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[5] <= Mux7.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[6] <= Mux6.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[7] <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[8] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[9] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[10] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[11] <= Mux1.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[12] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[13] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[14] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE
DACDAT_dds_o[15] <= Mux0.DB_MAX_OUTPUT_PORT_TYPE


|synth_midi|uart:uart_receiver
CLOCK_12M5 => rx_reg:b2v_inst.clk
CLOCK_12M5 => tick_generator:b2v_inst1.clk
CLOCK_12M5 => fsm_midi:b2v_inst4.clk
CLOCK_12M5 => sync_n_edgedetector:reset_inst.clock
DATA_IN => rx_reg:b2v_inst.serial_i
DATA_IN => fsm_midi:b2v_inst4.data
RESET_N => sync_n_edgedetector:reset_inst.data_in
NEW_DATA <= rx_reg:b2v_inst.new_out_data
DATA_OUT[0] <= bus_divider:b2v_inst5.data_out[0]
DATA_OUT[1] <= bus_divider:b2v_inst5.data_out[1]
DATA_OUT[2] <= bus_divider:b2v_inst5.data_out[2]
DATA_OUT[3] <= bus_divider:b2v_inst5.data_out[3]
DATA_OUT[4] <= bus_divider:b2v_inst5.data_out[4]
DATA_OUT[5] <= bus_divider:b2v_inst5.data_out[5]
DATA_OUT[6] <= bus_divider:b2v_inst5.data_out[6]
DATA_OUT[7] <= bus_divider:b2v_inst5.data_out[7]


|synth_midi|uart:uart_receiver|rx_reg:b2v_inst
tick => next_shift_reg[8].OUTPUTSELECT
tick => next_shift_reg[7].OUTPUTSELECT
tick => next_shift_reg[6].OUTPUTSELECT
tick => next_shift_reg[5].OUTPUTSELECT
tick => next_shift_reg[4].OUTPUTSELECT
tick => next_shift_reg[3].OUTPUTSELECT
tick => next_shift_reg[2].OUTPUTSELECT
tick => next_shift_reg[1].OUTPUTSELECT
tick => next_shift_reg[0].OUTPUTSELECT
tick => next_count[3].OUTPUTSELECT
tick => next_count[2].OUTPUTSELECT
tick => next_count[1].OUTPUTSELECT
tick => next_count[0].OUTPUTSELECT
tick => new_out_data.OUTPUTSELECT
tick => out_reg[0].ENA
tick => out_reg[7].ENA
tick => out_reg[6].ENA
tick => out_reg[5].ENA
tick => out_reg[4].ENA
tick => out_reg[3].ENA
tick => out_reg[2].ENA
tick => out_reg[1].ENA
serial_i => next_shift_reg[0].DATAB
parallel_o[0] <= out_reg[0].DB_MAX_OUTPUT_PORT_TYPE
parallel_o[1] <= out_reg[1].DB_MAX_OUTPUT_PORT_TYPE
parallel_o[2] <= out_reg[2].DB_MAX_OUTPUT_PORT_TYPE
parallel_o[3] <= out_reg[3].DB_MAX_OUTPUT_PORT_TYPE
parallel_o[4] <= out_reg[4].DB_MAX_OUTPUT_PORT_TYPE
parallel_o[5] <= out_reg[5].DB_MAX_OUTPUT_PORT_TYPE
parallel_o[6] <= out_reg[6].DB_MAX_OUTPUT_PORT_TYPE
parallel_o[7] <= out_reg[7].DB_MAX_OUTPUT_PORT_TYPE
new_out_data <= new_out_data.DB_MAX_OUTPUT_PORT_TYPE
clk => out_reg[0].CLK
clk => out_reg[1].CLK
clk => out_reg[2].CLK
clk => out_reg[3].CLK
clk => out_reg[4].CLK
clk => out_reg[5].CLK
clk => out_reg[6].CLK
clk => out_reg[7].CLK
clk => shift_reg[0].CLK
clk => shift_reg[1].CLK
clk => shift_reg[2].CLK
clk => shift_reg[3].CLK
clk => shift_reg[4].CLK
clk => shift_reg[5].CLK
clk => shift_reg[6].CLK
clk => shift_reg[7].CLK
clk => shift_reg[8].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
reset => out_reg[0].ACLR
reset => out_reg[1].ACLR
reset => out_reg[2].ACLR
reset => out_reg[3].ACLR
reset => out_reg[4].ACLR
reset => out_reg[5].ACLR
reset => out_reg[6].ACLR
reset => out_reg[7].ACLR
reset => shift_reg[0].ACLR
reset => shift_reg[1].ACLR
reset => shift_reg[2].ACLR
reset => shift_reg[3].ACLR
reset => shift_reg[4].ACLR
reset => shift_reg[5].ACLR
reset => shift_reg[6].ACLR
reset => shift_reg[7].ACLR
reset => shift_reg[8].ACLR
reset => count[0].ACLR
reset => count[1].ACLR
reset => count[2].ACLR
reset => count[3].ACLR


|synth_midi|uart:uart_receiver|tick_generator:b2v_inst1
enable => half_period_logic.IN1
enable => half_period_logic.IN1
enable => half_count[0].ACLR
enable => half_count[1].ACLR
enable => half_count[2].ACLR
enable => half_count[3].PRESET
enable => half_count[4].ACLR
enable => half_count[5].ACLR
enable => half_count[6].PRESET
enable => half_count[7].PRESET
enable => half_count[8].ACLR
enable => half_count[9].ACLR
enable => half_count[10].ACLR
enable => half_count[11].ACLR
enable => count[0].ACLR
enable => count[1].ACLR
enable => count[2].ACLR
enable => count[3].ACLR
enable => count[4].ACLR
enable => count[5].ACLR
enable => count[6].ACLR
enable => count[7].ACLR
enable => count[8].ACLR
enable => count[9].ACLR
enable => count[10].ACLR
enable => count[11].ACLR
clk => half_count[0].CLK
clk => half_count[1].CLK
clk => half_count[2].CLK
clk => half_count[3].CLK
clk => half_count[4].CLK
clk => half_count[5].CLK
clk => half_count[6].CLK
clk => half_count[7].CLK
clk => half_count[8].CLK
clk => half_count[9].CLK
clk => half_count[10].CLK
clk => half_count[11].CLK
clk => count[0].CLK
clk => count[1].CLK
clk => count[2].CLK
clk => count[3].CLK
clk => count[4].CLK
clk => count[5].CLK
clk => count[6].CLK
clk => count[7].CLK
clk => count[8].CLK
clk => count[9].CLK
clk => count[10].CLK
clk => count[11].CLK
tick <= full_period_logic.DB_MAX_OUTPUT_PORT_TYPE


|synth_midi|uart:uart_receiver|fsm_midi:b2v_inst4
clk => count[0].CLK
clk => count[1].CLK
clk => s_state~1.DATAIN
reset => count[0].ACLR
reset => count[1].ACLR
reset => s_state~3.DATAIN
data => fsm_drive.IN1
data => fsm_drive.IN0
tick => s_nextstate.DATAA
tick => enable.DATAA
tick => next_count.OUTPUTSELECT
tick => next_count.OUTPUTSELECT
tick => enable.OUTPUTSELECT
tick => s_nextstate.OUTPUTSELECT
tick => Selector2.IN3
tick => Selector3.IN3
tick => Selector4.IN3
tick => Selector5.IN3
tick => Selector6.IN3
tick => Selector7.IN3
tick => Selector8.IN3
tick => Selector9.IN3
tick => fsm_drive.IN1
tick => s_nextstate.DATAA
tick => Selector1.IN1
tick => Selector2.IN1
tick => Selector3.IN1
tick => Selector4.IN1
tick => Selector5.IN1
tick => Selector6.IN1
tick => Selector7.IN1
tick => Selector8.IN1
enable <= Selector11.DB_MAX_OUTPUT_PORT_TYPE


|synth_midi|uart:uart_receiver|bus_divider:b2v_inst5
data_in[0] => data_out[7].DATAIN
data_in[1] => data_out[6].DATAIN
data_in[2] => data_out[5].DATAIN
data_in[3] => data_out[4].DATAIN
data_in[4] => data_out[3].DATAIN
data_in[5] => data_out[2].DATAIN
data_in[6] => data_out[1].DATAIN
data_in[7] => data_out[0].DATAIN
data_out[0] <= data_in[7].DB_MAX_OUTPUT_PORT_TYPE
data_out[1] <= data_in[6].DB_MAX_OUTPUT_PORT_TYPE
data_out[2] <= data_in[5].DB_MAX_OUTPUT_PORT_TYPE
data_out[3] <= data_in[4].DB_MAX_OUTPUT_PORT_TYPE
data_out[4] <= data_in[3].DB_MAX_OUTPUT_PORT_TYPE
data_out[5] <= data_in[2].DB_MAX_OUTPUT_PORT_TYPE
data_out[6] <= data_in[1].DB_MAX_OUTPUT_PORT_TYPE
data_out[7] <= data_in[0].DB_MAX_OUTPUT_PORT_TYPE


|synth_midi|uart:uart_receiver|sync_n_edgeDetector:reset_inst
data_in => shiftreg[2].DATAIN
clock => shiftreg[0].CLK
clock => shiftreg[1].CLK
clock => shiftreg[2].CLK
reset_n => shiftreg[0].PRESET
reset_n => shiftreg[1].PRESET
reset_n => shiftreg[2].PRESET
data_sync <= shiftreg[1].DB_MAX_OUTPUT_PORT_TYPE
rise <= rise.DB_MAX_OUTPUT_PORT_TYPE
fall <= fall.DB_MAX_OUTPUT_PORT_TYPE


