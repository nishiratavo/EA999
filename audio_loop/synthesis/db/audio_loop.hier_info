|audio_loop
CLOCK_50 => audio_synth:b2v_inst2.CLOCK_50
KEY[0] => audio_synth:b2v_inst2.KEY[0]
KEY[1] => audio_synth:b2v_inst2.KEY[1]
SW[0] => audio_synth:b2v_inst2.SW[0]
SW[1] => audio_synth:b2v_inst2.SW[1]
AUD_XCK <= audio_synth:b2v_inst2.AUD_XCK
I2C_SCLK <= audio_synth:b2v_inst2.I2C_SCLK
I2C_SDAT <> audio_synth:b2v_inst2.I2C_SDAT
AUD_DACDAT <= i2s:b2v_inst1.DACDAT_s_o
AUD_BCLK <= i2s:b2v_inst1.BCLK_o
AUD_DACLRCK <= i2s:b2v_inst1.WS_o
AUD_ADCLRCK <= i2s:b2v_inst1.WS_o
AUD_ADCDAT => i2s:b2v_inst1.ADCDAT_s_i


|audio_loop|i2s:b2v_inst1
CLOCK_12M => bclk_gen:b2v_inst1.clk_in
CLOCK_12M => frame_decoder:b2v_inst2.clk_12M
CLOCK_12M => shiftreg_p2s:b2v_inst_Shift_R_o.clk
CLOCK_12M => shiftreg_p2s:b2v_inst_Shift_L_o.clk
CLOCK_12M => shiftreg_s2p:b2v_inst_Shift_R_i.clk
CLOCK_12M => shiftreg_s2p:b2v_inst_Shift_L_i.clk
RST_N_12M => bclk_gen:b2v_inst1.rst_n_12M
RST_N_12M => frame_decoder:b2v_inst2.rst_n_12M
RST_N_12M => shiftreg_p2s:b2v_inst_Shift_R_o.set_n
RST_N_12M => shiftreg_p2s:b2v_inst_Shift_L_o.set_n
RST_N_12M => shiftreg_s2p:b2v_inst_Shift_R_i.set_n
RST_N_12M => shiftreg_s2p:b2v_inst_Shift_L_i.set_n
DACDAT_pl_i[0] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[0]
DACDAT_pl_i[1] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[1]
DACDAT_pl_i[2] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[2]
DACDAT_pl_i[3] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[3]
DACDAT_pl_i[4] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[4]
DACDAT_pl_i[5] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[5]
DACDAT_pl_i[6] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[6]
DACDAT_pl_i[7] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[7]
DACDAT_pl_i[8] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[8]
DACDAT_pl_i[9] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[9]
DACDAT_pl_i[10] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[10]
DACDAT_pl_i[11] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[11]
DACDAT_pl_i[12] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[12]
DACDAT_pl_i[13] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[13]
DACDAT_pl_i[14] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[14]
DACDAT_pl_i[15] => shiftreg_p2s:b2v_inst_Shift_L_o.par_i[15]
DACDAT_pr_i[0] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[0]
DACDAT_pr_i[1] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[1]
DACDAT_pr_i[2] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[2]
DACDAT_pr_i[3] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[3]
DACDAT_pr_i[4] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[4]
DACDAT_pr_i[5] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[5]
DACDAT_pr_i[6] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[6]
DACDAT_pr_i[7] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[7]
DACDAT_pr_i[8] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[8]
DACDAT_pr_i[9] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[9]
DACDAT_pr_i[10] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[10]
DACDAT_pr_i[11] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[11]
DACDAT_pr_i[12] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[12]
DACDAT_pr_i[13] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[13]
DACDAT_pr_i[14] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[14]
DACDAT_pr_i[15] => shiftreg_p2s:b2v_inst_Shift_R_o.par_i[15]
ADCDAT_s_i => shiftreg_s2p:b2v_inst_Shift_R_i.ser_i
ADCDAT_s_i => shiftreg_s2p:b2v_inst_Shift_L_i.ser_i
ADCDAT_pl_o[0] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[0]
ADCDAT_pl_o[1] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[1]
ADCDAT_pl_o[2] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[2]
ADCDAT_pl_o[3] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[3]
ADCDAT_pl_o[4] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[4]
ADCDAT_pl_o[5] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[5]
ADCDAT_pl_o[6] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[6]
ADCDAT_pl_o[7] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[7]
ADCDAT_pl_o[8] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[8]
ADCDAT_pl_o[9] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[9]
ADCDAT_pl_o[10] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[10]
ADCDAT_pl_o[11] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[11]
ADCDAT_pl_o[12] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[12]
ADCDAT_pl_o[13] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[13]
ADCDAT_pl_o[14] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[14]
ADCDAT_pl_o[15] <= shiftreg_s2p:b2v_inst_Shift_L_i.par_o[15]
ADCDAT_pr_o[0] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[0]
ADCDAT_pr_o[1] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[1]
ADCDAT_pr_o[2] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[2]
ADCDAT_pr_o[3] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[3]
ADCDAT_pr_o[4] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[4]
ADCDAT_pr_o[5] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[5]
ADCDAT_pr_o[6] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[6]
ADCDAT_pr_o[7] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[7]
ADCDAT_pr_o[8] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[8]
ADCDAT_pr_o[9] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[9]
ADCDAT_pr_o[10] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[10]
ADCDAT_pr_o[11] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[11]
ADCDAT_pr_o[12] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[12]
ADCDAT_pr_o[13] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[13]
ADCDAT_pr_o[14] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[14]
ADCDAT_pr_o[15] <= shiftreg_s2p:b2v_inst_Shift_R_i.par_o[15]
DACDAT_s_o <= DACDAT_o_MUX:b2v_inst3.DACDAT_s_o
BCLK_o <= bclk_gen:b2v_inst1.clk_out
WS_o <= frame_decoder:b2v_inst2.WS
STROBE <= frame_decoder:b2v_inst2.strobe


|audio_loop|i2s:b2v_inst1|bclk_gen:b2v_inst1
rst_n_12M => count[0].ACLR
rst_n_12M => count[1].ACLR
clk_in => count[0].CLK
clk_in => count[1].CLK
clk_out <= clk_slow.DB_MAX_OUTPUT_PORT_TYPE


|audio_loop|i2s:b2v_inst1|frame_decoder:b2v_inst2
clk_12M => count[0].CLK
clk_12M => count[1].CLK
clk_12M => count[2].CLK
clk_12M => count[3].CLK
clk_12M => count[4].CLK
clk_12M => count[5].CLK
clk_12M => count[6].CLK
rst_n_12M => count[0].PRESET
rst_n_12M => count[1].PRESET
rst_n_12M => count[2].PRESET
rst_n_12M => count[3].PRESET
rst_n_12M => count[4].PRESET
rst_n_12M => count[5].PRESET
rst_n_12M => count[6].PRESET
enable => counter_comb_logic.IN1
enable => counter_comb_logic.IN1
shift_L <= i2s_decoder.DB_MAX_OUTPUT_PORT_TYPE
shift_R <= i2s_decoder.DB_MAX_OUTPUT_PORT_TYPE
strobe <= Equal1.DB_MAX_OUTPUT_PORT_TYPE
WS <= LessThan1.DB_MAX_OUTPUT_PORT_TYPE


|audio_loop|i2s:b2v_inst1|DACDAT_o_MUX:b2v_inst3
SER_OUT_L => DACDAT_s_o.DATAA
SER_OUT_R => DACDAT_s_o.DATAB
WS => DACDAT_s_o.OUTPUTSELECT
DACDAT_s_o <= DACDAT_s_o.DB_MAX_OUTPUT_PORT_TYPE


|audio_loop|i2s:b2v_inst1|shiftreg_p2s:b2v_inst_Shift_R_o
clk => shiftreg[0].CLK
clk => shiftreg[1].CLK
clk => shiftreg[2].CLK
clk => shiftreg[3].CLK
clk => shiftreg[4].CLK
clk => shiftreg[5].CLK
clk => shiftreg[6].CLK
clk => shiftreg[7].CLK
clk => shiftreg[8].CLK
clk => shiftreg[9].CLK
clk => shiftreg[10].CLK
clk => shiftreg[11].CLK
clk => shiftreg[12].CLK
clk => shiftreg[13].CLK
clk => shiftreg[14].CLK
clk => shiftreg[15].CLK
set_n => shiftreg[0].ACLR
set_n => shiftreg[1].ACLR
set_n => shiftreg[2].ACLR
set_n => shiftreg[3].ACLR
set_n => shiftreg[4].ACLR
set_n => shiftreg[5].ACLR
set_n => shiftreg[6].ACLR
set_n => shiftreg[7].ACLR
set_n => shiftreg[8].ACLR
set_n => shiftreg[9].ACLR
set_n => shiftreg[10].ACLR
set_n => shiftreg[11].ACLR
set_n => shiftreg[12].ACLR
set_n => shiftreg[13].ACLR
set_n => shiftreg[14].ACLR
set_n => shiftreg[15].ACLR
load_i => next_shiftreg[15].OUTPUTSELECT
load_i => next_shiftreg[14].OUTPUTSELECT
load_i => next_shiftreg[13].OUTPUTSELECT
load_i => next_shiftreg[12].OUTPUTSELECT
load_i => next_shiftreg[11].OUTPUTSELECT
load_i => next_shiftreg[10].OUTPUTSELECT
load_i => next_shiftreg[9].OUTPUTSELECT
load_i => next_shiftreg[8].OUTPUTSELECT
load_i => next_shiftreg[7].OUTPUTSELECT
load_i => next_shiftreg[6].OUTPUTSELECT
load_i => next_shiftreg[5].OUTPUTSELECT
load_i => next_shiftreg[4].OUTPUTSELECT
load_i => next_shiftreg[3].OUTPUTSELECT
load_i => next_shiftreg[2].OUTPUTSELECT
load_i => next_shiftreg[1].OUTPUTSELECT
load_i => next_shiftreg[0].OUTPUTSELECT
enable => shift_comb.IN0
shift => shift_comb.IN1
par_i[0] => next_shiftreg[0].DATAB
par_i[1] => next_shiftreg[1].DATAB
par_i[2] => next_shiftreg[2].DATAB
par_i[3] => next_shiftreg[3].DATAB
par_i[4] => next_shiftreg[4].DATAB
par_i[5] => next_shiftreg[5].DATAB
par_i[6] => next_shiftreg[6].DATAB
par_i[7] => next_shiftreg[7].DATAB
par_i[8] => next_shiftreg[8].DATAB
par_i[9] => next_shiftreg[9].DATAB
par_i[10] => next_shiftreg[10].DATAB
par_i[11] => next_shiftreg[11].DATAB
par_i[12] => next_shiftreg[12].DATAB
par_i[13] => next_shiftreg[13].DATAB
par_i[14] => next_shiftreg[14].DATAB
par_i[15] => next_shiftreg[15].DATAB
ser_o <= shiftreg[15].DB_MAX_OUTPUT_PORT_TYPE


|audio_loop|i2s:b2v_inst1|shiftreg_p2s:b2v_inst_Shift_L_o
clk => shiftreg[0].CLK
clk => shiftreg[1].CLK
clk => shiftreg[2].CLK
clk => shiftreg[3].CLK
clk => shiftreg[4].CLK
clk => shiftreg[5].CLK
clk => shiftreg[6].CLK
clk => shiftreg[7].CLK
clk => shiftreg[8].CLK
clk => shiftreg[9].CLK
clk => shiftreg[10].CLK
clk => shiftreg[11].CLK
clk => shiftreg[12].CLK
clk => shiftreg[13].CLK
clk => shiftreg[14].CLK
clk => shiftreg[15].CLK
set_n => shiftreg[0].ACLR
set_n => shiftreg[1].ACLR
set_n => shiftreg[2].ACLR
set_n => shiftreg[3].ACLR
set_n => shiftreg[4].ACLR
set_n => shiftreg[5].ACLR
set_n => shiftreg[6].ACLR
set_n => shiftreg[7].ACLR
set_n => shiftreg[8].ACLR
set_n => shiftreg[9].ACLR
set_n => shiftreg[10].ACLR
set_n => shiftreg[11].ACLR
set_n => shiftreg[12].ACLR
set_n => shiftreg[13].ACLR
set_n => shiftreg[14].ACLR
set_n => shiftreg[15].ACLR
load_i => next_shiftreg[15].OUTPUTSELECT
load_i => next_shiftreg[14].OUTPUTSELECT
load_i => next_shiftreg[13].OUTPUTSELECT
load_i => next_shiftreg[12].OUTPUTSELECT
load_i => next_shiftreg[11].OUTPUTSELECT
load_i => next_shiftreg[10].OUTPUTSELECT
load_i => next_shiftreg[9].OUTPUTSELECT
load_i => next_shiftreg[8].OUTPUTSELECT
load_i => next_shiftreg[7].OUTPUTSELECT
load_i => next_shiftreg[6].OUTPUTSELECT
load_i => next_shiftreg[5].OUTPUTSELECT
load_i => next_shiftreg[4].OUTPUTSELECT
load_i => next_shiftreg[3].OUTPUTSELECT
load_i => next_shiftreg[2].OUTPUTSELECT
load_i => next_shiftreg[1].OUTPUTSELECT
load_i => next_shiftreg[0].OUTPUTSELECT
enable => shift_comb.IN0
shift => shift_comb.IN1
par_i[0] => next_shiftreg[0].DATAB
par_i[1] => next_shiftreg[1].DATAB
par_i[2] => next_shiftreg[2].DATAB
par_i[3] => next_shiftreg[3].DATAB
par_i[4] => next_shiftreg[4].DATAB
par_i[5] => next_shiftreg[5].DATAB
par_i[6] => next_shiftreg[6].DATAB
par_i[7] => next_shiftreg[7].DATAB
par_i[8] => next_shiftreg[8].DATAB
par_i[9] => next_shiftreg[9].DATAB
par_i[10] => next_shiftreg[10].DATAB
par_i[11] => next_shiftreg[11].DATAB
par_i[12] => next_shiftreg[12].DATAB
par_i[13] => next_shiftreg[13].DATAB
par_i[14] => next_shiftreg[14].DATAB
par_i[15] => next_shiftreg[15].DATAB
ser_o <= shiftreg[15].DB_MAX_OUTPUT_PORT_TYPE


|audio_loop|i2s:b2v_inst1|shiftreg_s2p:b2v_inst_Shift_R_i
clk => shiftreg[0].CLK
clk => shiftreg[1].CLK
clk => shiftreg[2].CLK
clk => shiftreg[3].CLK
clk => shiftreg[4].CLK
clk => shiftreg[5].CLK
clk => shiftreg[6].CLK
clk => shiftreg[7].CLK
clk => shiftreg[8].CLK
clk => shiftreg[9].CLK
clk => shiftreg[10].CLK
clk => shiftreg[11].CLK
clk => shiftreg[12].CLK
clk => shiftreg[13].CLK
clk => shiftreg[14].CLK
clk => shiftreg[15].CLK
set_n => shiftreg[0].ACLR
set_n => shiftreg[1].ACLR
set_n => shiftreg[2].ACLR
set_n => shiftreg[3].ACLR
set_n => shiftreg[4].ACLR
set_n => shiftreg[5].ACLR
set_n => shiftreg[6].ACLR
set_n => shiftreg[7].ACLR
set_n => shiftreg[8].ACLR
set_n => shiftreg[9].ACLR
set_n => shiftreg[10].ACLR
set_n => shiftreg[11].ACLR
set_n => shiftreg[12].ACLR
set_n => shiftreg[13].ACLR
set_n => shiftreg[14].ACLR
set_n => shiftreg[15].ACLR
shift => shift_comb.IN0
enable => shift_comb.IN1
ser_i => shiftreg[0].DATAIN
par_o[0] <= shiftreg[0].DB_MAX_OUTPUT_PORT_TYPE
par_o[1] <= shiftreg[1].DB_MAX_OUTPUT_PORT_TYPE
par_o[2] <= shiftreg[2].DB_MAX_OUTPUT_PORT_TYPE
par_o[3] <= shiftreg[3].DB_MAX_OUTPUT_PORT_TYPE
par_o[4] <= shiftreg[4].DB_MAX_OUTPUT_PORT_TYPE
par_o[5] <= shiftreg[5].DB_MAX_OUTPUT_PORT_TYPE
par_o[6] <= shiftreg[6].DB_MAX_OUTPUT_PORT_TYPE
par_o[7] <= shiftreg[7].DB_MAX_OUTPUT_PORT_TYPE
par_o[8] <= shiftreg[8].DB_MAX_OUTPUT_PORT_TYPE
par_o[9] <= shiftreg[9].DB_MAX_OUTPUT_PORT_TYPE
par_o[10] <= shiftreg[10].DB_MAX_OUTPUT_PORT_TYPE
par_o[11] <= shiftreg[11].DB_MAX_OUTPUT_PORT_TYPE
par_o[12] <= shiftreg[12].DB_MAX_OUTPUT_PORT_TYPE
par_o[13] <= shiftreg[13].DB_MAX_OUTPUT_PORT_TYPE
par_o[14] <= shiftreg[14].DB_MAX_OUTPUT_PORT_TYPE
par_o[15] <= shiftreg[15].DB_MAX_OUTPUT_PORT_TYPE


|audio_loop|i2s:b2v_inst1|shiftreg_s2p:b2v_inst_Shift_L_i
clk => shiftreg[0].CLK
clk => shiftreg[1].CLK
clk => shiftreg[2].CLK
clk => shiftreg[3].CLK
clk => shiftreg[4].CLK
clk => shiftreg[5].CLK
clk => shiftreg[6].CLK
clk => shiftreg[7].CLK
clk => shiftreg[8].CLK
clk => shiftreg[9].CLK
clk => shiftreg[10].CLK
clk => shiftreg[11].CLK
clk => shiftreg[12].CLK
clk => shiftreg[13].CLK
clk => shiftreg[14].CLK
clk => shiftreg[15].CLK
set_n => shiftreg[0].ACLR
set_n => shiftreg[1].ACLR
set_n => shiftreg[2].ACLR
set_n => shiftreg[3].ACLR
set_n => shiftreg[4].ACLR
set_n => shiftreg[5].ACLR
set_n => shiftreg[6].ACLR
set_n => shiftreg[7].ACLR
set_n => shiftreg[8].ACLR
set_n => shiftreg[9].ACLR
set_n => shiftreg[10].ACLR
set_n => shiftreg[11].ACLR
set_n => shiftreg[12].ACLR
set_n => shiftreg[13].ACLR
set_n => shiftreg[14].ACLR
set_n => shiftreg[15].ACLR
shift => shift_comb.IN0
enable => shift_comb.IN1
ser_i => shiftreg[0].DATAIN
par_o[0] <= shiftreg[0].DB_MAX_OUTPUT_PORT_TYPE
par_o[1] <= shiftreg[1].DB_MAX_OUTPUT_PORT_TYPE
par_o[2] <= shiftreg[2].DB_MAX_OUTPUT_PORT_TYPE
par_o[3] <= shiftreg[3].DB_MAX_OUTPUT_PORT_TYPE
par_o[4] <= shiftreg[4].DB_MAX_OUTPUT_PORT_TYPE
par_o[5] <= shiftreg[5].DB_MAX_OUTPUT_PORT_TYPE
par_o[6] <= shiftreg[6].DB_MAX_OUTPUT_PORT_TYPE
par_o[7] <= shiftreg[7].DB_MAX_OUTPUT_PORT_TYPE
par_o[8] <= shiftreg[8].DB_MAX_OUTPUT_PORT_TYPE
par_o[9] <= shiftreg[9].DB_MAX_OUTPUT_PORT_TYPE
par_o[10] <= shiftreg[10].DB_MAX_OUTPUT_PORT_TYPE
par_o[11] <= shiftreg[11].DB_MAX_OUTPUT_PORT_TYPE
par_o[12] <= shiftreg[12].DB_MAX_OUTPUT_PORT_TYPE
par_o[13] <= shiftreg[13].DB_MAX_OUTPUT_PORT_TYPE
par_o[14] <= shiftreg[14].DB_MAX_OUTPUT_PORT_TYPE
par_o[15] <= shiftreg[15].DB_MAX_OUTPUT_PORT_TYPE


|audio_loop|audio_synth:b2v_inst2
CLOCK_50 => clk_div:b2v_inst1.clk_in
AUD_XCK <= clk_div:b2v_inst1.clk_out
KEY[0] => sync_n_edgeDetector:b2v_inst4.data_in
KEY[1] => sync_n_edgeDetector:b2v_inst5.data_in
SW[0] => sync_n_edgeDetector:b2v_inst6.data_in
SW[1] => sync_n_edgeDetector:b2v_inst7.data_in
RESET <= sync_n_edgeDetector:b2v_inst4.data_sync
I2C_SCLK <= i2c_master:b2v_inst3.scl_o
I2C_SDAT <> i2c_master:b2v_inst3.sda_io


|audio_loop|audio_synth:b2v_inst2|clk_div:b2v_inst1
clk_in => count[0].CLK
clk_in => count[1].CLK
clk_in => count[2].CLK
clk_in => count[3].CLK
clk_in => count[4].CLK
clk_in => count[5].CLK
clk_in => count[6].CLK
clk_in => count[7].CLK
clk_in => count[8].CLK
clk_in => count[9].CLK
clk_in => count[10].CLK
clk_in => count[11].CLK
clk_out <= LessThan0.DB_MAX_OUTPUT_PORT_TYPE


|audio_loop|audio_synth:b2v_inst2|i2c_ctrl:b2v_inst2
clk => send_data.CLK
clk => reg_count[0].CLK
clk => reg_count[1].CLK
clk => reg_count[2].CLK
clk => reg_count[3].CLK
clk => s_state~1.DATAIN
reset => send_data.ACLR
reset => reg_count[0].ACLR
reset => reg_count[1].ACLR
reset => reg_count[2].ACLR
reset => reg_count[3].ACLR
reset => s_state~3.DATAIN
ctrl_init => Selector12.IN2
ctrl_init => Selector11.IN1
select_mode[0] => Equal0.IN1
select_mode[0] => Equal1.IN0
select_mode[0] => Equal2.IN1
select_mode[0] => Equal3.IN1
select_mode[1] => Equal0.IN0
select_mode[1] => Equal1.IN1
select_mode[1] => Equal2.IN0
select_mode[1] => Equal3.IN0
write_o <= send_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[0] <= write_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[1] <= write_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[2] <= write_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[3] <= write_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[4] <= write_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[5] <= write_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[6] <= write_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[7] <= <GND>
write_data_o[8] <= <GND>
write_data_o[9] <= write_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[10] <= write_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[11] <= write_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[12] <= write_data.DB_MAX_OUTPUT_PORT_TYPE
write_data_o[13] <= <GND>
write_data_o[14] <= <GND>
write_data_o[15] <= <GND>
write_done_i => fsm_drive.IN1
write_done_i => fsm_drive.IN1
ack_error_i => fsm_drive.IN1


|audio_loop|audio_synth:b2v_inst2|i2c_master:b2v_inst3
clk => write_done.CLK
clk => ack_error.CLK
clk => byte_count[0].CLK
clk => byte_count[1].CLK
clk => ack.CLK
clk => bit_count[0].CLK
clk => bit_count[1].CLK
clk => bit_count[2].CLK
clk => data[0].CLK
clk => data[1].CLK
clk => data[2].CLK
clk => data[3].CLK
clk => data[4].CLK
clk => data[5].CLK
clk => data[6].CLK
clk => data[7].CLK
clk => data[8].CLK
clk => data[9].CLK
clk => data[10].CLK
clk => data[11].CLK
clk => data[12].CLK
clk => data[13].CLK
clk => data[14].CLK
clk => data[15].CLK
clk => data[16].CLK
clk => data[17].CLK
clk => data[18].CLK
clk => data[19].CLK
clk => data[20].CLK
clk => data[21].CLK
clk => data[22].CLK
clk => data[23].CLK
clk => sda.CLK
clk => scl.CLK
clk => clk_edge_mask[0].CLK
clk => clk_edge_mask[1].CLK
clk => clk_edge_mask[2].CLK
clk => clk_mask[0].CLK
clk => clk_mask[1].CLK
clk => clk_divider[0].CLK
clk => clk_divider[1].CLK
clk => clk_divider[2].CLK
clk => clk_divider[3].CLK
clk => clk_divider[4].CLK
clk => fsm_state~1.DATAIN
reset_n => write_done.ACLR
reset_n => ack_error.ACLR
reset_n => byte_count[0].ACLR
reset_n => byte_count[1].ACLR
reset_n => ack.ACLR
reset_n => bit_count[0].ACLR
reset_n => bit_count[1].ACLR
reset_n => bit_count[2].ACLR
reset_n => data[0].ACLR
reset_n => data[1].ACLR
reset_n => data[2].ACLR
reset_n => data[3].ACLR
reset_n => data[4].ACLR
reset_n => data[5].ACLR
reset_n => data[6].ACLR
reset_n => data[7].ACLR
reset_n => data[8].ACLR
reset_n => data[9].ACLR
reset_n => data[10].ACLR
reset_n => data[11].ACLR
reset_n => data[12].ACLR
reset_n => data[13].ACLR
reset_n => data[14].ACLR
reset_n => data[15].ACLR
reset_n => data[16].ACLR
reset_n => data[17].ACLR
reset_n => data[18].ACLR
reset_n => data[19].ACLR
reset_n => data[20].ACLR
reset_n => data[21].ACLR
reset_n => data[22].ACLR
reset_n => data[23].ACLR
reset_n => sda.PRESET
reset_n => scl.PRESET
reset_n => clk_edge_mask[0].ACLR
reset_n => clk_edge_mask[1].ACLR
reset_n => clk_edge_mask[2].ACLR
reset_n => clk_mask[0].ACLR
reset_n => clk_mask[1].ACLR
reset_n => clk_divider[0].ACLR
reset_n => clk_divider[1].ACLR
reset_n => clk_divider[2].ACLR
reset_n => clk_divider[3].ACLR
reset_n => clk_divider[4].ACLR
reset_n => fsm_state~3.DATAIN
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_data.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_i => next_fsm_state.OUTPUTSELECT
write_data_i[0] => next_data.DATAB
write_data_i[1] => next_data.DATAB
write_data_i[2] => next_data.DATAB
write_data_i[3] => next_data.DATAB
write_data_i[4] => next_data.DATAB
write_data_i[5] => next_data.DATAB
write_data_i[6] => next_data.DATAB
write_data_i[7] => next_data.DATAB
write_data_i[8] => next_data.DATAB
write_data_i[9] => next_data.DATAB
write_data_i[10] => next_data.DATAB
write_data_i[11] => next_data.DATAB
write_data_i[12] => next_data.DATAB
write_data_i[13] => next_data.DATAB
write_data_i[14] => next_data.DATAB
write_data_i[15] => next_data.DATAB
sda_io <> sda_io
scl_o <= scl.DB_MAX_OUTPUT_PORT_TYPE
write_done_o <= write_done.DB_MAX_OUTPUT_PORT_TYPE
ack_error_o <= ack_error.DB_MAX_OUTPUT_PORT_TYPE


|audio_loop|audio_synth:b2v_inst2|sync_n_edgeDetector:b2v_inst4
data_in => shiftreg[2].DATAIN
clock => shiftreg[0].CLK
clock => shiftreg[1].CLK
clock => shiftreg[2].CLK
reset_n => shiftreg[0].PRESET
reset_n => shiftreg[1].PRESET
reset_n => shiftreg[2].PRESET
data_sync <= shiftreg[1].DB_MAX_OUTPUT_PORT_TYPE
rise <= rise.DB_MAX_OUTPUT_PORT_TYPE
fall <= fall.DB_MAX_OUTPUT_PORT_TYPE


|audio_loop|audio_synth:b2v_inst2|sync_n_edgeDetector:b2v_inst5
data_in => shiftreg[2].DATAIN
clock => shiftreg[0].CLK
clock => shiftreg[1].CLK
clock => shiftreg[2].CLK
reset_n => shiftreg[0].PRESET
reset_n => shiftreg[1].PRESET
reset_n => shiftreg[2].PRESET
data_sync <= shiftreg[1].DB_MAX_OUTPUT_PORT_TYPE
rise <= rise.DB_MAX_OUTPUT_PORT_TYPE
fall <= fall.DB_MAX_OUTPUT_PORT_TYPE


|audio_loop|audio_synth:b2v_inst2|sync_n_edgeDetector:b2v_inst6
data_in => shiftreg[2].DATAIN
clock => shiftreg[0].CLK
clock => shiftreg[1].CLK
clock => shiftreg[2].CLK
reset_n => shiftreg[0].PRESET
reset_n => shiftreg[1].PRESET
reset_n => shiftreg[2].PRESET
data_sync <= shiftreg[1].DB_MAX_OUTPUT_PORT_TYPE
rise <= rise.DB_MAX_OUTPUT_PORT_TYPE
fall <= fall.DB_MAX_OUTPUT_PORT_TYPE


|audio_loop|audio_synth:b2v_inst2|sync_n_edgeDetector:b2v_inst7
data_in => shiftreg[2].DATAIN
clock => shiftreg[0].CLK
clock => shiftreg[1].CLK
clock => shiftreg[2].CLK
reset_n => shiftreg[0].PRESET
reset_n => shiftreg[1].PRESET
reset_n => shiftreg[2].PRESET
data_sync <= shiftreg[1].DB_MAX_OUTPUT_PORT_TYPE
rise <= rise.DB_MAX_OUTPUT_PORT_TYPE
fall <= fall.DB_MAX_OUTPUT_PORT_TYPE


